{
  "version": 3,
  "sources": ["../../src/system/bin/EventWatcher.ts", "../../src/system/bin/EventBus.ts", "../../src/system/features/bin/timing.ts", "../../src/system/bin/InactivityWatcher.ts", "../../src/system/bin/EventBinder.ts", "../../src/system/bin/PartialFetcher.ts", "../../src/system/bin/PartialLoader.ts", "../../src/system/bin/ServiceWorkerManager.ts", "../../src/system/features/bin/AsyncImageLoader.ts", "../../src/system/features/bin/AnimationLoop.ts", "../../src/system/features/SlidePlayer/SlidePlayer.ts", "../../src/system/features/bin/math.ts", "../../src/system/features/FloatingImages/FloatingImage.ts", "../../src/system/features/bin/PerformanceMonitor.ts", "../../src/system/features/bin/ResizeManager.ts", "../../src/system/features/FloatingImages/FloatingImagesManager.ts", "../../src/system/features/Screensaver/ScreensaverController.ts", "../../src/system/bin/DomReadyPromise.ts", "../../src/app/symlink.ts", "../../src/system/bin/generateId.ts", "../../src/app/main.ts"],
  "sourcesContent": ["// src/spaceface/system/bin/EventWatcher.ts\n\nexport const VERSION = 'nextworld-1.2.0' as const;\n\nexport abstract class EventWatcher {\n    protected readonly target: EventTarget;\n    protected readonly debug: boolean;\n    protected listening = false;\n    protected destroyed = false;\n\n    // DOM listeners storage\n    private domListeners: { type: string; handler: EventListenerOrEventListenerObject }[] = [];\n\n    constructor(target: EventTarget, debug: boolean = false) {\n        if (!(target instanceof EventTarget)) {\n            throw new Error(`${this.constructor.name}: target must be a valid EventTarget.`);\n        }\n        this.target = target;\n        this.debug = debug;\n    }\n\n    protected log(...args: any[]) {\n        if (this.debug) console.log(`[${this.constructor.name}]`, ...args);\n    }\n\n    protected checkDestroyed() {\n        if (this.destroyed) {\n            throw new Error(`${this.constructor.name} has been destroyed.`);\n        }\n    }\n\n    public destroy() {\n        if (this.destroyed) return;\n        this.log(\"Destroying watcher\");\n        try {\n            this.removeAllDomListeners();\n            this.removeEventListeners();\n        } finally {\n            this.destroyed = true;\n        }\n    }\n\n    /** Add a DOM listener and store it for later removal */\n    protected addDomListener(type: string, handler: EventListenerOrEventListenerObject) {\n        this.target.addEventListener(type, handler);\n        this.domListeners.push({ type, handler });\n    }\n\n    /** Remove all stored DOM listeners */\n    protected removeAllDomListeners() {\n        for (const { type, handler } of this.domListeners) {\n            this.target.removeEventListener(type, handler);\n        }\n        this.domListeners = [];\n    }\n\n    /** Must be implemented by subclasses */\n    protected abstract addEventListeners(): void;\n    protected abstract removeEventListeners(): void;\n}\n", "// src/spaceface/system/bin/EventBus.ts\n\nexport const VERSION = 'nextworld-1.2.0' as const;\n\nimport {\n    UnsubscribeFn,\n    ListenerInterface,\n    AnyListenerInterface,\n    EventBusErrorPayloadInterface,\n    EventBusInterface\n} from '../types/bin.js';\n\nexport class EventBus implements EventBusInterface {\n    private listeners: Record<string, ListenerInterface[]> = {};\n    private anyListeners: AnyListenerInterface[] = [];\n    private onceWrappers = new WeakMap<Function, Function>();\n\n    on<T = any>(event: string, fn: (payload: T) => any, priority = 0): UnsubscribeFn {\n        const list = this.listeners[event] ??= [];\n        // Insert in sorted order without re-sorting whole array\n        const listener: ListenerInterface = { fn, priority };\n        let i = list.length;\n        while (i > 0 && list[i - 1].priority < priority) i--;\n        list.splice(i, 0, listener);\n\n        return () => this.off(event, fn);\n    }\n\n    once<T = any>(event: string, fn: (payload: T) => any, priority = 0) {\n        const wrapper = (payload: T) => {\n            this.off(event, wrapper);\n            fn(payload);\n        };\n        this.onceWrappers.set(fn, wrapper);\n        this.on(event, wrapper, priority);\n    }\n\n    onAny(fn: (event: string, payload: any) => any, priority = 0): UnsubscribeFn {\n        const listener: AnyListenerInterface = { fn, priority };\n        let i = this.anyListeners.length;\n        while (i > 0 && this.anyListeners[i - 1].priority < priority) i--;\n        this.anyListeners.splice(i, 0, listener);\n\n        return () => this.offAny(fn);\n    }\n\n    off(event: string, fn: Function) {\n        const list = this.listeners[event];\n        if (!list) return;\n\n        const wrapper = this.onceWrappers.get(fn) ?? fn;\n        this.listeners[event] = list.filter(l => l.fn !== wrapper);\n    }\n\n    offAny(fn: Function) {\n        this.anyListeners = this.anyListeners.filter(l => l.fn !== fn);\n    }\n\n    emit<T = any>(event: string, payload?: T) {\n        if (!event) return this._handleError(\"Event name is undefined or empty\", new Error());\n\n        const list = this.listeners[event] ?? [];\n        for (const l of list) {\n            try { l.fn(payload); }\n            catch (err) { this._handleError(`Error in listener for \"${event}\"`, err); }\n        }\n\n        for (const l of this.anyListeners) {\n            try { l.fn(event, payload); }\n            catch (err) { this._handleError(`Error in any-listener for \"${event}\"`, err); }\n        }\n    }\n\n    async emitAsync<T = any>(event: string, payload?: T): Promise<any[]> {\n        if (!event) { this._handleError(\"Event name is undefined or empty\", new Error()); return []; }\n\n        const results: any[] = [];\n        const list = this.listeners[event] ?? [];\n\n        for (const l of list) {\n            try { results.push(await l.fn(payload)); }\n            catch (err) { this._handleError(`Async error in listener for \"${event}\"`, err); }\n        }\n\n        for (const l of this.anyListeners) {\n            try { results.push(await l.fn(event, payload)); }\n            catch (err) { this._handleError(`Async error in any-listener for \"${event}\"`, err); }\n        }\n\n        return results;\n    }\n\n    removeAllListeners(event?: string) {\n        if (!event) {\n            this.listeners = {};\n            this.anyListeners = [];\n        } else if (event === \"any\") {\n            this.anyListeners = [];\n        } else {\n            delete this.listeners[event];\n        }\n    }\n\n    hasListeners(event: string) {\n        return event === \"any\"\n            ? this.anyListeners.length > 0\n            : (this.listeners[event]?.length ?? 0) > 0;\n    }\n\n    listenerCount(event: string) {\n        return event === \"any\"\n            ? this.anyListeners.length\n            : (this.listeners[event]?.length ?? 0);\n    }\n\n    eventNames() {\n        return Object.keys(this.listeners).filter(e => this.listeners[e].length > 0);\n    }\n\n    getListeners(event: string) {\n        return event === \"any\"\n            ? this.anyListeners.map(l => l.fn)\n            : (this.listeners[event] ?? []).map(l => l.fn);\n    }\n\n    private _handleError(message: string, error: any) {\n        console.error(message, error);\n        if (message.includes(\"eventbus:error\")) return;\n        try {\n            this.emit<EventBusErrorPayloadInterface>(\"eventbus:error\", { message, error });\n        } catch (e) {\n            console.error('EventBus failed to emit \"eventbus:error\":', e);\n        }\n    }\n}\n\nexport const eventBus = new EventBus();\n", "// src/spaceface/system/features/bin/timing.ts\n\nexport const VERSION = 'nextworld-1.0.0' as const;\n\n/** Generic type: function with cancel method */\nexport type CancellableFunction<T extends (...args: any[]) => void> = T & { cancel: () => void };\n\n/** Internal helper: manages a timeout with cancel support */\nfunction createTimeout(): { id: number | null; set: (fn: () => void, ms: number) => void; cancel: () => void } {\n  let id: number | null = null;\n\n  return {\n    get id() { return id; },\n    set(fn: () => void, ms: number) {\n      if (id !== null) clearTimeout(id);\n      id = window.setTimeout(() => {\n        id = null;\n        fn();\n      }, ms);\n    },\n    cancel() {\n      if (id !== null) {\n        clearTimeout(id);\n        id = null;\n      }\n    },\n  };\n}\n\n/**\n * Creates a debounced function that delays invoking `func` until after `delay` ms\n * have elapsed since the last call.\n *\n * @example\n * ```ts\n * const saveInput = debounce((value: string) => console.log(\"Saving:\", value), 300);\n * saveInput(\"Hello\");\n * saveInput.cancel(); // cancels any pending call\n * ```\n */\nexport function debounce<T extends (...args: any[]) => void>(\n  func: T,\n  delay = 300,\n  immediate = false\n): CancellableFunction<(...args: Parameters<T>) => void> {\n  const timer = createTimeout();\n\n  function debounced(this: ThisParameterType<T>, ...args: Parameters<T>) {\n    const callNow = immediate && timer.id === null;\n\n    timer.set(() => {\n      if (!immediate) func.apply(this, args);\n    }, delay);\n\n    if (callNow) func.apply(this, args);\n  }\n\n  debounced.cancel = () => timer.cancel();\n\n  return debounced;\n}\n\n/**\n * Creates a throttled function that invokes `func` at most once per `delay` ms.\n *\n * @example\n * ```ts\n * const logScroll = throttle(() => console.log(\"Scroll!\"), 500, { leading: true, trailing: true });\n * window.addEventListener(\"scroll\", logScroll);\n * logScroll.cancel(); // cancels any pending trailing call\n * ```\n */\nexport function throttle<T extends (...args: any[]) => void>(\n  func: T,\n  delay = 100,\n  options: { leading?: boolean; trailing?: boolean } = {}\n): CancellableFunction<(...args: Parameters<T>) => void> {\n  const { leading = true, trailing = true } = options;\n  let lastCall = 0;\n  let lastArgs: Parameters<T> | null = null;\n  let lastThis: ThisParameterType<T> | null = null;\n  const timer = createTimeout();\n\n  function invoke() {\n    lastCall = leading ? Date.now() : 0;\n    func.apply(lastThis!, lastArgs!);\n    lastArgs = lastThis = null;\n  }\n\n  function throttled(this: ThisParameterType<T>, ...args: Parameters<T>) {\n    const now = Date.now();\n    if (lastCall === 0 && !leading) lastCall = now;\n\n    lastArgs = args;\n    lastThis = this;\n\n    const remaining = delay - (now - lastCall);\n\n    if (remaining <= 0 || remaining > delay) {\n      timer.cancel();\n      invoke();\n    } else if (timer.id === null && trailing) {\n      timer.set(() => {\n        if (trailing && lastArgs) invoke();\n      }, remaining);\n    }\n  }\n\n  throttled.cancel = () => {\n    timer.cancel();\n    lastCall = 0;\n    lastArgs = lastThis = null;\n  };\n\n  return throttled;\n}\n", "// src/spaceface/system/bin/InactivityWatcher.ts\n\nexport const VERSION = 'nextworld-1.2.0' as const;\n\nimport { EventWatcher } from './EventWatcher.js';\nimport { eventBus } from './EventBus.js';\nimport { throttle } from '../features/bin/timing.js';\n\nexport interface InactivityWatcherOptionsInterface {\n    inactivityDelay: number;\n    debug?: boolean;\n}\n\nexport class InactivityWatcher extends EventWatcher {\n    private static _instance: InactivityWatcher | null = null;\n\n    private inactivityDelay: number;\n    private lastActiveAt: number;\n    private timer?: number;\n    private userIsInactive: boolean = false;\n\n    constructor(target: EventTarget, options: InactivityWatcherOptionsInterface) {\n        super(target, options.debug ?? false);\n        this.inactivityDelay = options.inactivityDelay;\n        this.lastActiveAt = Date.now();\n\n        this.log(`Initialized with inactivityDelay=${this.inactivityDelay}ms`);\n\n        this.addEventListeners();\n    }\n\n    static getInstance(options: InactivityWatcherOptionsInterface & { target?: EventTarget }): InactivityWatcher {\n        if (!this._instance) {\n            this._instance = new InactivityWatcher(options.target ?? document, options);\n        }\n        return this._instance;\n    }\n\n    protected addEventListeners(): void {\n        const throttledReset = throttle(() => this.resetTimer(), 200);\n\n        // Track user activity\n        this.target.addEventListener('mousemove', throttledReset);\n        this.target.addEventListener('keydown', throttledReset);\n        this.target.addEventListener('scroll', throttledReset);\n        this.target.addEventListener('visibilitychange', throttledReset);\n\n        // Start the inactivity timer\n        this.resetTimer();\n    }\n\n    protected removeEventListeners(): void {\n        this.target.removeEventListener('mousemove', this.resetTimer);\n        this.target.removeEventListener('keydown', this.resetTimer);\n        this.target.removeEventListener('scroll', this.resetTimer);\n        this.target.removeEventListener('visibilitychange', this.resetTimer);\n\n        if (this.timer) clearTimeout(this.timer);\n    }\n\n    private resetTimer() {\n        const now = Date.now();\n        this.lastActiveAt = now;\n\n        if (this.userIsInactive) {\n            this.userIsInactive = false;\n            eventBus.emit('user:active', {\n                lastActiveAt: this.lastActiveAt,\n                inactivityDelay: this.inactivityDelay,\n                visible: document.visibilityState === 'visible'\n            });\n            this.log('User is active');\n        }\n\n        if (this.timer) clearTimeout(this.timer);\n        this.timer = window.setTimeout(() => this.setInactive(), this.inactivityDelay);\n    }\n\n    private setInactive() {\n        this.userIsInactive = true;\n        const now = Date.now();\n        eventBus.emit('user:inactive', {\n            lastActiveAt: this.lastActiveAt,\n            inactiveAt: now,\n            inactivityDelay: this.inactivityDelay,\n            visible: document.visibilityState === 'visible'\n        });\n        this.log('User is inactive');\n    }\n}\n", "// src/spaceface/system/bin/EventBinder.ts\n\n/**\n * EventBinder v1.2.2\n *\n * Manages the lifecycle of EventBus and DOM event bindings with\n * support for auto-unbinding, debugging, and scoped lifetimes.\n *\n * Provides a single utility class for safely attaching and\n * detaching event handlers in a structured way.\n */\nexport const VERSION = 'nextworld-1.2.2' as const;\n\nimport {\n  DomBinding,\n  EventBinderStats,\n  EventBinderInterface,\n  BusBindingInterface\n} from \"../types/bin.js\";\n\nimport { eventBus } from \"./EventBus.js\";\n\ninterface IEventBinderDebugPayload {\n  method: string;\n  details: unknown;\n}\n\n/**\n * EventBinder\n *\n * A utility for managing event bindings across EventBus and DOM.\n * Keeps track of all active bindings and supports automatic cleanup.\n */\nexport class EventBinder implements EventBinderInterface {\n  private IBusBindings: BusBindingInterface[] = [];\n  private domBindings: DomBinding[] = [];\n  private debugMode: boolean;\n\n  /**\n   * Create a new EventBinder.\n   * @param debug Enable debug logging (emits `debug:EventBinder` events)\n   */\n  constructor(debug = false) {\n    this.debugMode = debug;\n  }\n\n    /** Emit debug info via EventBus if debug mode is enabled */\n    private debug(method: string, details: unknown): void {\n        if (!this.debugMode) return;\n        try {\n            const payload: IEventBinderDebugPayload = { method, details };\n            eventBus.emit<IEventBinderDebugPayload>(\"debug:EventBinder\", payload);\n        } catch {\n            // ignore debug errors\n        }\n    }\n\n    /**\n     * Attach binder lifetime to an AbortSignal.\n     * All bindings will be unbound automatically when the signal aborts.\n     * @param signal AbortSignal to link binder lifetime to\n     */\n    attachTo(signal: AbortSignal): void {\n        if (signal.aborted) {\n            this.unbindAll();\n            return;\n        }\n        const listener = () => this.unbindAll();\n        signal.addEventListener(\"abort\", listener, { once: true });\n    }\n\n    /**\n     * Bind a handler to an EventBus event.\n     * @param event Event name\n     * @param handler Event handler function\n     */\n    bindBus(event: string, handler: (...args: any[]) => void): void {\n        if (this.IBusBindings.find(b => b.event === event && b.handler === handler)) {\n            this.debug(\"bus:bind:duplicate\", { event, handler });\n            return;\n        }\n        try {\n            const unsubscribe = eventBus.on(event, handler);\n            this.IBusBindings.push({ event, handler, unsubscribe });\n            this.debug(\"bus:bind\", { event, handler });\n        } catch (err) {\n            console.error(`EventBinder: Failed to bind bus event \"${event}\"`, err);\n        }\n    }\n\n    /**\n     * Bind a DOM event handler with automatic tracking and unbind support.\n     * @param target Target element or EventTarget\n     * @param event Event name\n     * @param handler Event listener\n     * @param options Optional event listener options\n     */\n    bindDOM(\n        target: EventTarget,\n        event: string,\n        handler: EventListenerOrEventListenerObject,\n        options: AddEventListenerOptions | boolean = false\n    ): void {\n        if (!(target instanceof EventTarget)) {\n            console.warn(\"EventBinder: Invalid DOM target\", target);\n            return;\n        }\n\n        if (this.domBindings.find(b => b.target === target && b.event === event && b.handler === handler)) {\n            this.debug(\"dom:bind:duplicate\", { event, handler, target });\n            return;\n        }\n\n        const controller = new AbortController();\n        const normalizedOptions: AddEventListenerOptions =\n            typeof options === \"boolean\"\n                ? { capture: options, signal: controller.signal }\n                : { ...options, signal: controller.signal };\n\n        try {\n            target.addEventListener(event, handler, normalizedOptions);\n            this.domBindings.push({ target, event, handler, options: normalizedOptions, controller });\n            this.debug(\"dom:bind\", { event, handler, target });\n        } catch (err) {\n            console.error(`EventBinder: Failed to bind DOM event \"${event}\"`, err);\n        }\n    }\n\n    /**\n     * Unbind all EventBus and DOM event handlers managed by this binder.\n     */\n    unbindAll(): void {\n        this.debug(\"unbindAll\", {\n            bus: this.IBusBindings.length,\n            dom: this.domBindings.length,\n        });\n\n        for (const b of this.IBusBindings) {\n            try {\n                b.unsubscribe();\n                this.debug(\"bus:unbind\", { event: b.event });\n            } catch (err) {\n                console.error(`EventBinder: Failed to unbind bus \"${b.event}\"`, err);\n            }\n        }\n\n        /**\n         * Unbind all EventBus and DOM event handlers managed by this binder.\n         */\n        for (const b of this.domBindings) {\n            try {\n                b.controller.abort();\n                this.debug(\"dom:unbind\", { event: b.event, target: b.target });\n            } catch (err) {\n                console.error(`EventBinder: Failed to unbind DOM \"${b.event}\"`, err);\n            }\n        }\n\n        this.IBusBindings = [];\n        this.domBindings = [];\n    }\n\n    /**\n     * Unbind a specific EventBus handler.\n     * @param event Event name\n     * @param handler Event handler\n     * @returns True if successfully unbound, false otherwise\n     */\n    unbindBus(event: string, handler: (...args: any[]) => void): boolean {\n        const i = this.IBusBindings.findIndex(b => b.event === event && b.handler === handler);\n        if (i === -1) return false;\n\n        try {\n            this.IBusBindings[i].unsubscribe();\n            this.IBusBindings.splice(i, 1);\n            this.debug(\"bus:unbind:single\", { event, handler });\n            return true;\n        } catch (err) {\n            console.error(`EventBinder: Failed to unbind bus \"${event}\"`, err);\n            return false;\n        }\n    }\n\n    /**\n     * Unbind a specific DOM event handler.\n     * @param target Target element\n     * @param event Event name\n     * @param handler Event listener\n     * @returns True if successfully unbound, false otherwise\n     */\n    unbindDOM(target: EventTarget, event: string, handler: EventListenerOrEventListenerObject): boolean {\n        const i = this.domBindings.findIndex(b => b.target === target && b.event === event && b.handler === handler);\n        if (i === -1) return false;\n\n        try {\n            this.domBindings[i].controller.abort();\n            this.domBindings.splice(i, 1);\n            this.debug(\"dom:unbind:single\", { event, target });\n            return true;\n        } catch (err) {\n            console.error(`EventBinder: Failed to unbind DOM \"${event}\"`, err);\n            return false;\n        }\n    }\n\n    /**\n     * Get binding statistics.\n     * @returns Number of bus and DOM events currently bound\n     */\n    getStats(): EventBinderStats {\n        return {\n            busEvents: this.IBusBindings.length,\n            domEvents: this.domBindings.length,\n            totalEvents: this.IBusBindings.length + this.domBindings.length,\n        };\n    }\n\n    /**\n     * Check if there are any active bindings.\n     * @returns True if any EventBus or DOM bindings exist\n     */\n    hasBindings(): boolean {\n        return this.IBusBindings.length > 0 || this.domBindings.length > 0;\n    }\n\n    /**\n     * Get details of all active bindings.\n     * @returns Object with arrays of bus and DOM binding info\n     */\n    getBindingDetails(): { bus: string[]; dom: string[] } {\n        return {\n            bus: this.IBusBindings.map(b => b.event),\n            dom: this.domBindings.map(b => `${b.event}@${b.target.constructor.name}`),\n        };\n    }\n\n    /**\n     * Utility wrapper for scoped binding lifetimes.\n     * Automatically unbinds after callback execution (sync or async).\n     *\n     * @param callback Function that receives a temporary EventBinder\n     * @param debug Enable debug mode\n     * @returns The callback result\n     */\n    static withAutoUnbind<T>(\n        callback: (binder: EventBinder) => T | Promise<T>,\n        debug = false\n    ): Promise<T> | T {\n        const binder = new EventBinder(debug);\n        try {\n            const result = callback(binder);\n            if (result instanceof Promise) {\n                return result.finally(() => binder.unbindAll());\n            } else {\n                binder.unbindAll();\n                return result;\n            }\n        } catch (err) {\n            binder.unbindAll();\n            throw err;\n        }\n    }\n}\n\n/** Default shared EventBinder instance */\nexport const eventBinder = new EventBinder();\n", "// src/spaceface/system/bin/PartialFetcher.ts\n\nexport const VERSION = 'nextworld-1.0.0' as const;\n\nimport { eventBus } from \"./EventBus.js\";\nimport { EventBinder } from \"./EventBinder.js\";\nimport { PartialFetchOptionsInterface } from \"../types/bin.js\";\n\nexport class PartialFetcher {\n    /**\n     * Loads HTML from a URL and injects it into the target element.\n     * Emits lifecycle events: partial:load:start, partial:load:success, partial:load:error, partial:load:complete\n     */\n    static async load(\n        url: string,\n        targetSelector: string,\n        options: PartialFetchOptionsInterface = {}\n    ): Promise<{ container: HTMLElement; html: string }> {\n        const { replace = true, signal, withBindings, debugBindings = false } = options;\n\n        const runLoad = async (): Promise<{ container: HTMLElement; html: string }> => {\n            const basePayload = { url, targetSelector };\n            eventBus.emit(\"partial:load:start\", basePayload);\n\n            try {\n                const fetchOptions = signal ? { signal } : undefined;\n                const response = await fetch(url, fetchOptions);\n                if (!response.ok) throw new Error(`Fetch failed with status ${response.status}`);\n\n                const html = (await response.text()).trim();\n                const container = document.querySelector<HTMLElement>(targetSelector);\n                if (!container) throw new Error(`Target container not found: ${targetSelector}`);\n\n                const template = document.createElement(\"template\");\n                template.innerHTML = html;\n\n                if (replace) container.replaceChildren(...template.content.childNodes);\n                else container.append(...template.content.childNodes);\n\n                eventBus.emit(\"partial:load:success\", { ...basePayload, html });\n                return { container, html };\n            } catch (error) {\n                eventBus.emit(\"partial:load:error\", { ...basePayload, error });\n                throw error;\n            } finally {\n                eventBus.emit(\"partial:load:complete\", basePayload);\n            }\n        };\n\n        if (typeof withBindings === \"function\") {\n            return EventBinder.withAutoUnbind(async (binder) => {\n                if (signal) binder.attachTo(signal);\n                withBindings(binder);\n                return runLoad();\n            }, debugBindings);\n        } else {\n            return runLoad();\n        }\n    }\n}\n", "// src/spaceface/system/bin/PartialLoader.ts\n\nexport const VERSION = 'nextworld-1.0.0' as const;\n\nimport { debounce } from \"../features/bin/timing.js\";\nimport { eventBus } from \"./EventBus.js\";\n\nimport {\n    PartialLoaderOptionsInterface,\n    PartialLoadResultInterface,\n    PartialInfoInterface\n} from \"../types/bin.js\";\n\nexport class PartialLoader {\n    private cache = new Map<string, string>();\n    private loadingPromises = new Map<string, Promise<string>>();\n    private loadedPartials = new Map<string, boolean>();\n    private options: Required<PartialLoaderOptionsInterface>;\n\n    constructor(options: PartialLoaderOptionsInterface = {}) {\n        this.options = {\n            debug: false,\n            baseUrl: \"/\",\n            cacheEnabled: true,\n            timeout: 10000,\n            retryAttempts: 3,\n            ...options,\n        };\n    }\n\n    private logDebug(msg: string, data?: unknown) {\n        if (this.options.debug) console.debug(`[PartialLoader] ${msg}`, data);\n    }\n\n    async load(\n        input: HTMLLinkElement | PartialInfoInterface | (HTMLLinkElement | PartialInfoInterface)[]\n    ): Promise<PartialLoadResultInterface[]> {\n        const items = Array.isArray(input) ? input : [input];\n        const results: PartialLoadResultInterface[] = [];\n\n        for (const item of items) {\n            try {\n                if (item instanceof HTMLLinkElement) {\n                    results.push(await this.loadLink(item));\n                } else {\n                    results.push(await this.loadInfo(item));\n                }\n            } catch {\n                const url = item instanceof HTMLLinkElement\n                    ? item.getAttribute(\"src\") || \"\"\n                    : item.url;\n                results.push({ success: false, url, cached: false });\n            }\n        }\n\n        eventBus.emit(\"partials:allLoaded\", { count: results.length });\n        return results;\n    }\n\n    private loadLink(link: HTMLLinkElement) {\n        const src = link.getAttribute(\"src\");\n        if (!src) throw new Error(\"Partial link missing src\");\n        return this.loadUrl(this.resolveUrl(src), link);\n    }\n\n    private loadInfo(info: PartialInfoInterface) {\n        return this.loadUrl(this.resolveUrl(info.url), info.container, info.id);\n    }\n\n    private async loadUrl(url: string, container: Element | ParentNode, id?: string): Promise<PartialLoadResultInterface> {\n        try {\n            if (this.loadingPromises.has(url)) await this.loadingPromises.get(url)!;\n\n            if (this.options.cacheEnabled && this.cache.has(url)) {\n                this.insertHTML(container, this.cache.get(url)!);\n                this.loadedPartials.set(id || url, true);\n                eventBus.emit(\"partial:loaded\", { url, cached: true });\n                return { success: true, url, cached: true };\n            }\n\n            const promise = this.fetchPartial(url);\n            this.loadingPromises.set(url, promise);\n\n            const html = await promise;\n            if (this.options.cacheEnabled) this.cache.set(url, html);\n\n            this.insertHTML(container, html);\n            this.loadedPartials.set(id || url, true);\n            eventBus.emit(\"partial:loaded\", { url, cached: false });\n            return { success: true, url, cached: false };\n        } catch (error) {\n            this.showError(container, error as Error);\n            eventBus.emit(\"partial:error\", { url, error });\n            throw error;\n        } finally {\n            this.loadingPromises.delete(url);\n        }\n    }\n\n    private async fetchPartial(url: string, attempt = 1): Promise<string> {\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), this.options.timeout);\n\n        try {\n            const res = await fetch(url, { signal: controller.signal, headers: { Accept: \"text/html\" } });\n            if (!res.ok) throw new Error(`HTTP ${res.status}`);\n            const html = (await res.text()).trim();\n            if (!html) throw new Error(\"Empty response\");\n            return html;\n        } catch (err) {\n            if (attempt < this.options.retryAttempts) {\n                await this.delay(Math.min(2 ** attempt * 100, 5000));\n                return this.fetchPartial(url, attempt + 1);\n            }\n            throw err;\n        } finally {\n            clearTimeout(timeoutId);\n        }\n    }\n\n    private insertHTML(container: ParentNode | Element, html: string) {\n        const template = document.createElement(\"template\");\n        template.innerHTML = html;\n\n        if (container instanceof HTMLLinkElement) {\n            container.replaceWith(...template.content.childNodes);\n        } else if (container instanceof Element) {\n            container.innerHTML = \"\";\n            container.append(...template.content.childNodes);\n        } else {\n            container.append(...template.content.childNodes);\n        }\n    }\n\n    private showError(container: ParentNode | Element, error: Error) {\n        const div = document.createElement(\"div\");\n        div.className = \"partial-error\";\n        div.textContent = \"Partial load failed\";\n        if (this.options.debug) div.textContent += `: ${error.message}`;\n\n        if (container instanceof HTMLLinkElement) {\n            container.replaceWith(div);\n        } else if (container instanceof Element) {\n            container.innerHTML = \"\";\n            container.appendChild(div);\n        } else {\n            container.appendChild(div);\n        }\n    }\n\n    isPartialLoaded(id: string) {\n        return this.loadedPartials.has(id);\n    }\n\n    private resolveUrl(src: string) {\n        if (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(src) || src.startsWith(\"//\")) return src;\n\n        try {\n            const base = this.options.baseUrl || window.location.origin + \"/\";\n            const url = new URL(src, base).toString();\n            return url.startsWith(window.location.origin)\n                ? url.slice(window.location.origin.length) || \"/\"\n                : url;\n        } catch {\n            return src;\n        }\n    }\n\n    private delay(ms: number) {\n        return new Promise(r => setTimeout(r, ms));\n    }\n\n    async loadContainer(container: ParentNode = document): Promise<PartialLoadResultInterface[]> {\n        const links = container.querySelectorAll<HTMLLinkElement>('link[rel=\"partial\"][src]');\n        if (!links.length) return [];\n        return this.load(Array.from(links));\n    }\n\n    watch(container: HTMLElement | Document = document.body) {\n        if (!window.MutationObserver) return;\n        const observer = new MutationObserver(\n            debounce(() => this.loadContainer(container), 100)\n        );\n        observer.observe(container, { childList: true, subtree: true });\n        return observer;\n    }\n}\n", "// src/spaceface/system/bin/ServiceWorkerManager.ts\n\nexport const VERSION = 'nextworld-1.0.0' as const;\nexport class ServiceWorkerManager {\n  private swPath: string;\n  private options: RegistrationOptions;\n  private customConfig: Record<string, any>;\n  private registration: ServiceWorkerRegistration | null = null;\n  private isSupported: boolean;\n\n  constructor(\n    swPath: string = '/sw.js',\n    options: RegistrationOptions = {},\n    customConfig: Record<string, any> = {}\n  ) {\n    this.swPath = swPath;\n    this.options = {\n      scope: '/',\n      updateViaCache: 'none',\n      ...options,\n    };\n    this.customConfig = customConfig;\n    this.isSupported = 'serviceWorker' in navigator;\n  }\n\n  /**\n   * Register the service worker\n   */\n  public async register(): Promise<ServiceWorkerRegistration | null> {\n    if (!this.isSupported) {\n      throw new Error('ServiceWorker not supported');\n    }\n\n    try {\n      this.registration = await navigator.serviceWorker.register(\n        this.swPath,\n        this.options\n      );\n\n      this.setupEventListeners();\n      return this.registration;\n    } catch (error) {\n      console.error('SW registration failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Apply custom configuration after registration\n   */\n  public configure(): void {\n    if (this.customConfig.strategy) {\n      this.setStrategy(this.customConfig.strategy);\n    }\n  }\n\n  /**\n   * Unregister the service worker\n   */\n  public async unregister(): Promise<boolean> {\n    if (!this.registration) return false;\n\n    try {\n      return await this.registration.unregister();\n    } catch (error) {\n      console.error('SW unregistration failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Update the service worker\n   */\n  public async update(): Promise<void | null> {\n    if (!this.registration) return null;\n\n    try {\n      // registration.update() returns void\n      await this.registration.update();\n      return null;\n    } catch (error) {\n      console.error('SW update failed:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Get registration status\n   */\n  public getStatus(): 'unregistered' | 'installing' | 'waiting' | 'active' | 'unknown' {\n    if (!this.registration) return 'unregistered';\n\n    if (this.registration.installing) return 'installing';\n    if (this.registration.waiting) return 'waiting';\n    if (this.registration.active) return 'active';\n\n    return 'unknown';\n  }\n\n  /**\n   * Setup lifecycle event listeners\n   */\n  private setupEventListeners(): void {\n    if (!this.registration) return;\n\n    this.registration.addEventListener('updatefound', () => {\n      const newWorker = this.registration?.installing;\n      if (!newWorker) return;\n\n      newWorker.addEventListener('statechange', () => {\n        if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n          this.onUpdateAvailable?.(newWorker);\n        }\n      });\n    });\n\n    navigator.serviceWorker.addEventListener('controllerchange', () => {\n      this.onControllerChange?.();\n    });\n  }\n\n  /**\n   * Send a message to the service worker\n   */\n  public async postMessage(message: any, transfer?: Transferable[]): Promise<void> {\n    const sw = navigator.serviceWorker.controller;\n    if (!sw) throw new Error('No active service worker');\n\n    if (transfer) {\n      sw.postMessage(message, { transfer });\n    } else {\n      sw.postMessage(message);\n    }\n  }\n\n  /**\n   * Wait for message from service worker\n   */\n  public waitForMessage(timeout: number = 5000): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(() => reject(new Error('Message timeout')), timeout);\n\n      const handler = (event: MessageEvent) => {\n        clearTimeout(timer);\n        navigator.serviceWorker.removeEventListener('message', handler);\n        resolve(event.data);\n      };\n\n      navigator.serviceWorker.addEventListener('message', handler);\n    });\n  }\n\n  /**\n   * Activate the waiting service worker\n   */\n  public async activateWaiting(): Promise<boolean> {\n    if (!this.registration?.waiting) return false;\n\n    try {\n      await this.postMessage({ type: 'SKIP_WAITING' });\n      return true;\n    } catch (error) {\n      console.error('Failed to activate waiting SW:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Set runtime cache strategy (e.g., cache-first or network-first)\n   */\n  public setStrategy(config: Record<string, any> = {}): void {\n    if (!navigator.serviceWorker.controller) {\n      console.warn('No active SW to set strategy');\n      return;\n    }\n\n    this.postMessage({\n      type: 'SET_STRATEGY',\n      payload: config,\n    });\n  }\n\n  // Optional hooks for integration - override as needed\n  public onUpdateAvailable?(newWorker: ServiceWorker): void;\n  public onControllerChange?(): void;\n}\n", "// src/spaceface/system/features/bin/AsyncImageLoader.ts\n\nexport const VERSION = 'nextworld-1.2.0' as const;\n\nimport {\n  AsyncImageLoaderOptions,\n  SourceDataInterface,\n  ImageMetadataInterface,\n  ImageLoadResultInterface\n} from '../../types/bin.js';\n\nexport class AsyncImageLoader {\n  private container: Element | null;\n  private includePicture: boolean;\n  private cache = new WeakMap<HTMLImageElement, boolean>();\n  private destroyed = false;\n\n  constructor(container: Element, options: AsyncImageLoaderOptions = {}) {\n    if (!(container instanceof Element)) {\n      throw new Error(\"AsyncImageLoader: container must be a DOM Element.\");\n    }\n    this.container = container;\n    this.includePicture = options.includePicture ?? false;\n  }\n\n  private ensureActive(): void {\n    if (this.destroyed || !this.container) {\n      throw new Error(\"AsyncImageLoader: Instance destroyed.\");\n    }\n  }\n\n  public getImages(selector = \"img\"): HTMLImageElement[] {\n    this.ensureActive();\n    if (!selector.trim()) return [];\n\n    const images = new Set<HTMLImageElement>();\n\n    this.container!.querySelectorAll(selector).forEach(el => {\n      if (el instanceof HTMLImageElement) {\n        if (!this.includePicture && el.closest(\"picture\")) return;\n        images.add(el);\n      }\n    });\n\n    return [...images];\n  }\n\n  // ---------- Overloads ----------\n  public async waitForImagesToLoad(\n    selector?: string,\n    includeFailed?: false\n  ): Promise<HTMLImageElement[]>;\n\n  public async waitForImagesToLoad(\n    selector: string,\n    includeFailed: true\n  ): Promise<ImageLoadResultInterface[]>;\n\n  // ---------- Implementation ----------\n  public async waitForImagesToLoad(\n    selector = \"img\",\n    includeFailed = false\n  ): Promise<HTMLImageElement[] | ImageLoadResultInterface[]> {\n    const images = this.getImages(selector);\n\n    const results = await Promise.all(\n      images.map(img => {\n        if (this.cache.has(img)) return { element: img, loaded: true };\n\n        if (img.complete && img.naturalWidth > 0) {\n          this.cache.set(img, true);\n          return { element: img, loaded: true };\n        }\n\n        return new Promise<ImageLoadResultInterface>(resolve => {\n          img.addEventListener(\n            \"load\",\n            () => {\n              this.cache.set(img, true);\n              resolve({ element: img, loaded: true });\n            },\n            { once: true }\n          );\n          img.addEventListener(\n            \"error\",\n            () => resolve({ element: img, loaded: false }),\n            { once: true }\n          );\n        });\n      })\n    );\n\n    return includeFailed\n      ? results\n      : results.filter(r => r.loaded).map(r => r.element);\n  }\n\n  public getImageData(selector = \"img\"): ImageMetadataInterface[] {\n    return this.getImages(selector).map(img => {\n      const sources: SourceDataInterface[] = [];\n\n      if (this.includePicture) {\n        const picture = img.closest(\"picture\");\n        if (picture) {\n          picture.querySelectorAll(\"source\").forEach(source => {\n            sources.push({\n              srcset: source.srcset || \"\",\n              type: source.type || \"\",\n              media: source.media || \"\"\n            });\n          });\n        }\n      }\n\n      return {\n        element: img,\n        src: img.src || \"\",\n        alt: img.alt || \"\",\n        href: img.closest(\"a\")?.href ?? null,\n        sources\n      };\n    });\n  }\n\n  public destroy(): void {\n    this.container = null;\n    this.destroyed = true;\n  }\n}\n", "// src/spaceface/system/features/bin/AnimationLoop.ts\n\nexport const VERSION = 'nextworld-1.2.1' as const;\n\ntype FrameCallback = () => void;\n\nexport class AnimationLoop {\n    private callbacks: Set<FrameCallback> = new Set();\n    private running = false;\n    private _rafId: number | null = null;\n\n    add(callback: FrameCallback) {\n        if (!this.callbacks.has(callback)) this.callbacks.add(callback);\n        this.start();\n    }\n\n    remove(callback: FrameCallback) {\n        this.callbacks.delete(callback);\n        if (this.callbacks.size === 0) this.stop();\n    }\n\n    has(callback: FrameCallback): boolean {\n        return this.callbacks.has(callback);\n    }\n\n    private start() {\n        if (this.running || this.callbacks.size === 0) return;\n        this.running = true;\n        this._loop();\n    }\n\n    private stop() {\n        this.running = false;\n        if (this._rafId !== null) cancelAnimationFrame(this._rafId);\n        this._rafId = null;\n    }\n\n    pause() { this.stop(); }\n    resume() { if (this.callbacks.size > 0) this.start(); }\n\n    private _loop = () => {\n        if (!this.running) return;\n        for (const cb of this.callbacks) {\n            try { cb(); } catch (err) { console.error('AnimationLoop callback error:', err); }\n        }\n        this._rafId = requestAnimationFrame(this._loop);\n    };\n}\n\nexport const animationLoop = new AnimationLoop();\n", "// src/spaceface/features/SlidePlayer/SlidePlayer.ts\n//\nexport const VERSION = 'nextworld-1.2.0';\n\nimport { eventBus } from '../../bin/EventBus.js';\nimport { EventBinder } from '../../bin/EventBinder.js';\nimport { AsyncImageLoader } from '../bin/AsyncImageLoader.js';\nimport { animationLoop } from '../bin/AnimationLoop.js';\n\ninterface ISlidePlayerOptions {\n  interval?: number;\n  includePicture?: boolean;\n  dotsSelector?: string;\n  autoCreateDots?: boolean;\n  startPaused?: boolean;\n  enableBusEvents?: boolean;\n  autoplay?: boolean;\n}\n\ntype PauseReason = 'manual' | 'hover' | 'hidden' | 'inactivity';\n\nexport class SlidePlayer {\n  static readonly SWIPE_THRESHOLD = 50;\n  static readonly VERTICAL_TOLERANCE = 30;\n  static readonly DEFAULT_INTERVAL = 5000;\n\n  private container: HTMLElement;\n  private interval: number;\n  private includePicture: boolean;\n  private dotsSelector: string;\n  private autoCreateDots: boolean;\n  private enableBusEvents: boolean;\n  private autoplay: boolean;\n\n  private slides: HTMLElement[] = [];\n  private dots: HTMLDivElement[] = [];\n  private dotsWrapper: HTMLElement | null = null;\n  private currentIndex = 0;\n\n  private lastTickTime = 0;\n  private isDestroyed = false;\n\n  private isPointerDown = false;\n  private pointerStartX = 0;\n  private pointerStartY = 0;\n  private pointerEndX = 0;\n  private pointerEndY = 0;\n\n  private pauseReasons = new Set<PauseReason>();\n  private loader: AsyncImageLoader;\n  private binder: EventBinder;\n  private animateCallback: () => void;\n\n  private lastPauseState: boolean = false;\n  public readonly ready: Promise<void>;\n\n  constructor(\n    containerOrSelector: string | HTMLElement,\n    {\n      interval = SlidePlayer.DEFAULT_INTERVAL,\n      includePicture = false,\n      dotsSelector = '.dots',\n      autoCreateDots = false,\n      startPaused = false,\n      enableBusEvents = true,\n      autoplay = true\n    }: ISlidePlayerOptions = {}\n  ) {\n    this.container = this.resolveContainer(containerOrSelector);\n    this.interval = interval > 0 ? interval : SlidePlayer.DEFAULT_INTERVAL;\n    this.includePicture = includePicture;\n    this.dotsSelector = dotsSelector;\n    this.autoCreateDots = autoCreateDots;\n    this.enableBusEvents = enableBusEvents;\n    this.autoplay = autoplay;\n\n    this.loader = new AsyncImageLoader(this.container, { includePicture });\n    this.binder = new EventBinder(true);\n\n    if (startPaused) this.pauseReasons.add('manual');\n\n    this.animateCallback = () => this.animate();\n\n    this.ready = this.init();\n  }\n\n  private resolveContainer(containerOrSelector: string | HTMLElement): HTMLElement {\n    const container = typeof containerOrSelector === 'string'\n      ? document.querySelector<HTMLElement>(containerOrSelector)\n      : containerOrSelector;\n    if (!container) throw new Error('SlidePlayer: container element not found.');\n    return container;\n  }\n\n  private async init(): Promise<void> {\n    await this.loader.waitForImagesToLoad();\n\n    this.refreshSlides();\n    if (!this.slides.length) {\n      console.warn('[SlidePlayer] No .slide elements found in container.');\n      return;\n    }\n\n    this.setupDots();\n    this.bindEvents();\n    this.setActiveSlide(0);\n    this.lastTickTime = performance.now();\n\n    // Screensaver / inactivity integration\n    if (this.enableBusEvents) {\n      this.binder.bindBus('user:inactive', () => this.togglePause('inactivity', true));\n      this.binder.bindBus('user:active', () => this.togglePause('inactivity', false));\n    }\n\n    // Start RAF loop only if not paused\n    if (!this.isPaused()) animationLoop.add(this.animateCallback);\n  }\n\n  /** ---- RAF Animation ---- */\n  private animate(): void {\n    if (this.isDestroyed || !this.autoplay || this.isPaused() || this.slides.length < 2) return;\n\n    const now = performance.now();\n    const elapsed = now - this.lastTickTime;\n\n    if (elapsed >= this.interval) {\n      this.next(false);\n      this.lastTickTime = now;\n    }\n  }\n\n  /** ---- Pause / Resume ---- */\nprivate togglePause(reason: PauseReason, shouldPause: boolean): void {\n    if (shouldPause) this.pauseReasons.add(reason);\n    else this.pauseReasons.delete(reason);\n\n    this.emitPauseResumeIfChanged();\n\n    // Only update RAF if state really changed\n    if (this.isPaused()) {\n        if (animationLoop.has(this.animateCallback)) animationLoop.remove(this.animateCallback);\n    } else {\n        if (!animationLoop.has(this.animateCallback)) animationLoop.add(this.animateCallback);\n    }\n}\n\n\n  private emitPauseResumeIfChanged(): void {\n    const nowPaused = this.isPaused();\n    if (nowPaused !== this.lastPauseState) {\n      this.lastPauseState = nowPaused;\n      this.emit(nowPaused ? 'slideplayer:paused' : 'slideplayer:resumed', {\n        reasons: Array.from(this.pauseReasons)\n      });\n    }\n  }\n\n  /** ---- Slide Navigation ---- */\n  public goToSlide(index: number, restart: boolean = true): void {\n    if (index < 0 || index >= this.slides.length || index === this.currentIndex) return;\n    this.setActiveSlide(index);\n    if (restart) this.resetTimer();\n  }\n\n  public next(restart: boolean = true): void {\n    if (this.slides.length < 2) return;\n    this.goToSlide((this.currentIndex + 1) % this.slides.length, restart);\n  }\n\n  public prev(restart: boolean = true): void {\n    if (this.slides.length < 2) return;\n    const prevIndex = (this.currentIndex - 1 + this.slides.length) % this.slides.length;\n    this.goToSlide(prevIndex, restart);\n  }\n\n  public play(): void { this.togglePause('manual', false); }\n  public pause(): void { this.togglePause('manual', true); }\n  public isPaused(): boolean { return this.pauseReasons.size > 0; }\n\n  /** ---- Slides / Dots ---- */\n  private refreshSlides(): void { this.slides = Array.from(this.container.querySelectorAll<HTMLElement>('.slide')); }\n\n  private setupDots(): void {\n    this.dotsWrapper = this.container.querySelector(this.dotsSelector);\n    if (!this.dotsWrapper && this.autoCreateDots) {\n      this.dotsWrapper = document.createElement('div');\n      this.dotsWrapper.className = 'dots';\n      this.container.appendChild(this.dotsWrapper);\n    }\n    if (!this.dotsWrapper) return;\n\n    this.dotsWrapper.innerHTML = '';\n    this.dots = this.slides.map((_, i) => {\n      const dot = document.createElement('div');\n      dot.className = 'dot';\n      dot.dataset.index = i.toString();\n      this.binder.bindDOM(dot, 'click', () => this.goToSlide(i));\n      this.dotsWrapper!.appendChild(dot);\n      return dot as HTMLDivElement;\n    });\n  }\n\n  private updateDots(index: number): void { this.dots.forEach((dot, i) => dot.classList.toggle('active', i === index)); }\n\n  private setActiveSlide(index: number): void {\n    const prev = this.currentIndex;\n    this.slides[this.currentIndex]?.classList.remove('active');\n    this.currentIndex = index;\n    this.slides[this.currentIndex]?.classList.add('active');\n    this.updateDots(index);\n    if (prev !== index) this.emit('slideplayer:slideChanged', { index }, 'slideplayer:slide-changed');\n  }\n\n  private resetTimer(): void { this.lastTickTime = performance.now(); }\n\n  /** ---- Event Binding ---- */\n  private bindEvents(): void {\n    this.bindPointerEvents();\n    this.bindKeyboardEvents();\n    this.bindVisibilityEvents();\n    this.bindActivityEvents();\n    this.bindUnloadEvent();\n  }\n\n  private bindPointerEvents(): void {\n    this.binder.bindDOM(this.container, 'pointerdown', (e) => {\n      const ev = e as PointerEvent;\n      this.isPointerDown = true;\n      this.pointerStartX = ev.clientX; this.pointerStartY = ev.clientY;\n      this.pointerEndX = ev.clientX; this.pointerEndY = ev.clientY;\n    });\n    this.binder.bindDOM(this.container, 'pointermove', (e) => {\n      if (!this.isPointerDown) return;\n      const ev = e as PointerEvent;\n      this.pointerEndX = ev.clientX; this.pointerEndY = ev.clientY;\n    });\n    this.binder.bindDOM(this.container, 'pointerup', () => {\n      if (this.isPointerDown) { this.handleSwipe(); this.isPointerDown = false; }\n    });\n    this.binder.bindDOM(this.container, 'pointerleave', () => this.isPointerDown = false);\n    this.binder.bindDOM(this.container, 'mouseenter', () => this.togglePause('hover', true));\n    this.binder.bindDOM(this.container, 'mouseleave', () => this.togglePause('hover', false));\n  }\n\n  private bindKeyboardEvents(): void {\n    this.binder.bindDOM(document, 'keydown', (e) => {\n      const ev = e as KeyboardEvent;\n      if (ev.key === 'ArrowRight') this.next();\n      else if (ev.key === 'ArrowLeft') this.prev();\n    });\n  }\n\n  private bindVisibilityEvents(): void {\n    this.binder.bindDOM(document, 'visibilitychange', () => {\n      this.togglePause('hidden', document.visibilityState === 'hidden');\n    });\n  }\n\n  private bindActivityEvents(): void {\n    this.binder.bindBus('user:inactive', () => this.togglePause('inactivity', true));\n    this.binder.bindBus('user:active', () => this.togglePause('inactivity', false));\n  }\n\n  private bindUnloadEvent(): void {\n    this.binder.bindDOM(window, 'beforeunload', () => this.destroy());\n  }\n\n  private handleSwipe(): void {\n    const dx = this.pointerEndX - this.pointerStartX;\n    const dy = this.pointerEndY - this.pointerStartY;\n    if (Math.abs(dx) >= SlidePlayer.SWIPE_THRESHOLD && Math.abs(dy) < SlidePlayer.VERTICAL_TOLERANCE) {\n      dx < 0 ? this.next() : this.prev();\n    }\n  }\n\n  private emit(type: string, detail: any, busEvent?: string): void {\n    this.container.dispatchEvent(new CustomEvent(type, { detail, bubbles: true }));\n    if (this.enableBusEvents && busEvent) eventBus.emit(busEvent, detail);\n  }\n\n  public destroy(): void {\n    if (this.isDestroyed) return;\n    this.isDestroyed = true;\n    animationLoop.remove(this.animateCallback);\n    this.binder.unbindAll();\n    this.loader.destroy();\n    this.slides = [];\n    this.dots = [];\n    this.dotsWrapper = null;\n    this.pauseReasons.clear();\n  }\n\n  /** ---- Public getters ---- */\n  public get currentSlideIndex(): number { return this.currentIndex; }\n  public get slideCount(): number { return this.slides.length; }\n}\n", "// src/spaceface/system/features/bin/math.ts\n\nexport const VERSION = 'nextworld-1.0.0' as const;\n\nexport const clamp = (value: number, min: number, max: number): number =>\n  Math.max(min, Math.min(value, max));\n\nexport const lerp = (a: number, b: number, t: number): number =>\n  (1 - t) * a + t * b;\n", "// src/spaceface/features/FloatingImages/FloatingImage.ts\n\nexport const VERSION = 'nextworld-1.2.1' as const;\n\nimport { clamp } from '../bin/math.js';\n\nimport type {\n    ContainerDimensionsInterface,\n    FloatingImageOptionsInterface\n} from '../../types/features.js';\n\nconst DAMPING = 0.85;\nconst MIN_VELOCITY = 0.1;\nconst MAX_SPEED = 2.5;\nconst VELOCITY_JITTER = 0.02;\n\nexport class FloatingImage {\n    private element: HTMLElement | null;\n    private size: { width: number; height: number };\n    private x: number;\n    private y: number;\n    private vx: number;\n    private vy: number;\n    private options: Required<FloatingImageOptionsInterface>;\n\n    constructor(element: HTMLElement, dims: ContainerDimensionsInterface, options: FloatingImageOptionsInterface = {}) {\n        this.element = element;\n        this.options = { useSubpixel: true, debug: false, ...options };\n        this.size = { width: element.offsetWidth, height: element.offsetHeight };\n\n        this.x = Math.random() * (dims.width - this.size.width);\n        this.y = Math.random() * (dims.height - this.size.height);\n\n        this.vx = (Math.random() - 0.5) * 3;\n        this.vy = (Math.random() - 0.5) * 3;\n\n        element.style.willChange = 'transform';\n        element.style.backfaceVisibility = 'hidden';\n        element.style.perspective = '1000px';\n        element.style.opacity = '1';\n\n        this.updatePosition();\n    }\n\n    updatePosition(): boolean {\n        if (!this.element) return false;\n        const x = this.options.useSubpixel ? this.x : Math.round(this.x);\n        const y = this.options.useSubpixel ? this.y : Math.round(this.y);\n        this.element.style.transform = `translate3d(${x}px, ${y}px, 0)`;\n        return true;\n    }\n\n    update(multiplier: number, dims: ContainerDimensionsInterface, applyPosition = true): boolean {\n        if (!this.element) return false;\n\n        this.x += this.vx * multiplier;\n        this.y += this.vy * multiplier;\n\n        if (this.x <= 0 || this.x + this.size.width >= dims.width) {\n            this.vx = -this.vx * DAMPING;\n            this.vx = Math.abs(this.vx) < MIN_VELOCITY ? Math.sign(this.vx) * MIN_VELOCITY : this.vx;\n            this.x = clamp(this.x, 0, dims.width - this.size.width);\n        }\n\n        if (this.y <= 0 || this.y + this.size.height >= dims.height) {\n            this.vy = -this.vy * DAMPING;\n            this.vy = Math.abs(this.vy) < MIN_VELOCITY ? Math.sign(this.vy) * MIN_VELOCITY : this.vy;\n            this.y = clamp(this.y, 0, dims.height - this.size.height);\n        }\n\n        this.vx += (Math.random() - 0.5) * VELOCITY_JITTER;\n        this.vy += (Math.random() - 0.5) * VELOCITY_JITTER;\n\n        const speedSquared = this.vx ** 2 + this.vy ** 2;\n        if (speedSquared > MAX_SPEED ** 2) {\n            const scale = MAX_SPEED / Math.sqrt(speedSquared);\n            this.vx *= scale;\n            this.vy *= scale;\n        }\n\n        if (applyPosition) return this.updatePosition();\n        return true;\n    }\n\n    resetPosition(dims: ContainerDimensionsInterface) {\n        this.x = Math.random() * (dims.width - this.size.width);\n        this.y = Math.random() * (dims.height - this.size.height);\n        this.updatePosition(); // must be called\n    }\n\n\n    updateSize() {\n        if (!this.element) return;\n        this.size.width = this.element.offsetWidth;\n        this.size.height = this.element.offsetHeight;\n    }\n\n    clampPosition(dims: ContainerDimensionsInterface) {\n        this.x = clamp(this.x, 0, dims.width - this.size.width);\n        this.y = clamp(this.y, 0, dims.height - this.size.height);\n    }\n\n    destroy() {\n        if (!this.element) return;\n        this.element.style.willChange = 'auto';\n        this.element.style.backfaceVisibility = '';\n        this.element.style.perspective = '';\n        this.element = null;\n    }\n}\n", "// src/spaceface/system/features/bin/PerformanceMonitor.ts\n\nexport const VERSION = 'nextworld-1.0.0' as const;\n\nimport {\n  PerformanceLevel,\n  PerformanceSettingsInterface,\n} from '../../types/bin.js';\n\nexport class PerformanceMonitor {\n  private fps: number = 60;\n  private lastTime: number = performance.now();\n  private frameSkipThreshold: number = 30;\n  private shouldSkipFrame: boolean = false;\n  private frameCount: number = 0;\n\n  private cachedPerformanceLevel: PerformanceLevel = 'high';\n  private lastLevelUpdate: number = 0;\n  private levelUpdateInterval: number = 1000;\n  private cachedSettings: PerformanceSettingsInterface | null = null;\n\n  private lastLoggedFPS: number = 60;\n  private fpsLogThreshold: number = 5;\n\n  /** Updates FPS and returns whether to skip this frame */\n  public update(): boolean {\n    const now = performance.now();\n    const delta = now - this.lastTime;\n    if (delta < 1) return this.shouldSkipFrame;\n\n    const currentFPS = 1000 / delta;\n    this.fps = this.fps * 0.9 + currentFPS * 0.1; // smoothing\n    this.frameCount++;\n\n    this.shouldSkipFrame = this.fps < this.frameSkipThreshold;\n\n    if (Math.abs(this.fps - this.lastLoggedFPS) >= this.fpsLogThreshold) {\n      // eventBus.emit('performance:fps', { fps: this.getCurrentFPS(), frameSkip: this.shouldSkipFrame });\n      this.lastLoggedFPS = this.fps;\n    }\n\n    this.lastTime = now;\n    return this.shouldSkipFrame;\n  }\n\n  public getFrameCount(): number { return this.frameCount; }\n  public getCurrentFPS(): number { return Math.round(this.fps * 10) / 10; }\n\n  public getPerformanceLevel(): PerformanceLevel {\n    const now = performance.now();\n    if (now - this.lastLevelUpdate > this.levelUpdateInterval) {\n      this.cachedPerformanceLevel = this.fps >= 50 ? 'high' : this.fps >= 30 ? 'medium' : 'low';\n      this.lastLevelUpdate = now;\n      this.cachedSettings = null;\n      // eventBus.emit('performance:level', { level: this.cachedPerformanceLevel, fps: this.getCurrentFPS() });\n    }\n    return this.cachedPerformanceLevel;\n  }\n\n  public getRecommendedSettings(): PerformanceSettingsInterface {\n    if (this.cachedSettings) return this.cachedSettings;\n\n    const level = this.getPerformanceLevel();\n    const settingsMap: Record<PerformanceLevel, PerformanceSettingsInterface> = {\n      high: { maxImages: 50, speedMultiplier: 1.0, useSubpixel: true },\n      medium: { maxImages: 25, speedMultiplier: 0.8, useSubpixel: false },\n      low: { maxImages: 10, speedMultiplier: 0.5, useSubpixel: false },\n    };\n    this.cachedSettings = settingsMap[level];\n    return this.cachedSettings;\n  }\n\n  public reset(): void {\n    this.fps = 60;\n    this.lastTime = performance.now();\n    this.shouldSkipFrame = false;\n    this.frameCount = 0;\n    this.cachedPerformanceLevel = 'high';\n    this.lastLevelUpdate = 0;\n    this.cachedSettings = null;\n    this.lastLoggedFPS = 60;\n  }\n}\n", "// src/spaceface/system/features/bin/ResizeManager.ts\n\nimport { debounce, throttle, CancellableFunction } from './timing.js';\n\nexport const VERSION = 'nextworld-1.2.0' as const;\n\ntype ResizeCallback = () => void;\n\ninterface ElementObserverEntryInterface {\n  observer: ResizeObserver;\n  callbacks: Set<ResizeCallback>;\n}\n\ntype ElementSize = { width: number; height: number };\n\nexport class ResizeManager {\n  private windowCallbacks: Map<ResizeCallback, EventListener> = new Map();\n  private elementObservers: Map<Element, ElementObserverEntryInterface> = new Map();\n\n  /**\n   * Register a callback for window resize events.\n   * Optionally debounce or throttle the callback.\n   */\n  onWindow(\n    cb: ResizeCallback,\n    options?: { debounceMs?: number; throttleMs?: number }\n  ): () => void {\n    let wrappedCb: CancellableFunction<() => void>;\n\n    if (options?.debounceMs != null) {\n      wrappedCb = debounce(cb, options.debounceMs);\n    } else if (options?.throttleMs != null) {\n      wrappedCb = throttle(cb, options.throttleMs);\n    } else {\n      wrappedCb = cb as CancellableFunction<() => void>;\n      wrappedCb.cancel = () => {};\n    }\n\n    const handler = () => wrappedCb();\n    this.windowCallbacks.set(cb, handler);\n    window.addEventListener(\"resize\", handler);\n\n    return (): void => {\n      window.removeEventListener(\"resize\", handler);\n      wrappedCb.cancel?.();\n      this.windowCallbacks.delete(cb);\n    };\n  }\n\n  /**\n   * Register a callback for an element's resize events.\n   * Optionally debounce or throttle the callback.\n   */\n  onElement(\n    el: Element,\n    cb: ResizeCallback,\n    options?: { debounceMs?: number; throttleMs?: number }\n  ): () => void {\n    let entry = this.elementObservers.get(el);\n\n    if (!entry) {\n      const callbacks = new Set<ResizeCallback>();\n      const observer = new ResizeObserver(() => {\n        callbacks.forEach(fn => fn());\n      });\n\n      entry = { observer, callbacks };\n      this.elementObservers.set(el, entry);\n      observer.observe(el);\n    }\n\n    // Wrap the callback if debounce or throttle is specified\n    let wrappedCb: CancellableFunction<() => void>;\n\n    if (options?.debounceMs != null) {\n      wrappedCb = debounce(cb, options.debounceMs);\n    } else if (options?.throttleMs != null) {\n      wrappedCb = throttle(cb, options.throttleMs);\n    } else {\n      wrappedCb = cb as CancellableFunction<() => void>;\n      wrappedCb.cancel = () => {};\n    }\n\n    entry.callbacks.add(wrappedCb);\n\n    const callbacksRef = entry.callbacks;\n    const observerRef = entry.observer;\n\n    return (): void => {\n      callbacksRef.delete(wrappedCb);\n      wrappedCb.cancel?.();\n      if (callbacksRef.size === 0) {\n        observerRef.disconnect();\n        this.elementObservers.delete(el);\n      }\n    };\n  }\n\n  /**\n   * Get current size of an element.\n   */\n  getElement(el: HTMLElement): ElementSize {\n    const rect = el.getBoundingClientRect();\n    return { width: rect.width, height: rect.height };\n  }\n\n  /**\n   * Cleanup all registered window and element callbacks.\n   */\n  destroy(): void {\n    for (const [cb, handler] of this.windowCallbacks.entries()) {\n      window.removeEventListener(\"resize\", handler);\n    }\n    this.windowCallbacks.clear();\n\n    for (const entry of this.elementObservers.values()) {\n      entry.observer.disconnect();\n    }\n    this.elementObservers.clear();\n  }\n}\n\n// Singleton instance\nexport const resizeManager = new ResizeManager();\n", "// src/spaceface/features/FloatingImages/FloatingImagesManager.ts\n\nexport const VERSION = 'nextworld-1.2.1' as const;\n\nimport { FloatingImage } from './FloatingImage.js';\nimport { PerformanceMonitor } from '../bin/PerformanceMonitor.js';\nimport { resizeManager } from '../bin/ResizeManager.js';\nimport { AsyncImageLoader } from '../bin/AsyncImageLoader.js';\nimport { animationLoop } from '../bin/AnimationLoop.js';\n\nimport type {\n    FloatingImagesManagerOptionsInterface,\n    ContainerDimensionsInterface,\n    FloatingImagesManagerInterface\n} from '../../types/features.js';\nexport class FloatingImagesManager implements FloatingImagesManagerInterface {\n    readonly container: HTMLElement;\n    performanceMonitor: PerformanceMonitor;\n    images: FloatingImage[] = [];\n    speedMultiplier: number = 1;\n    isInViewport: boolean = true;\n    private _destroyed: boolean = false;\n    private animateCallback: () => void;\n    maxImages: number;\n    intersectionObserver: IntersectionObserver;\n    unsubscribeWindow?: () => void;\n    unsubscribeElement?: () => void;\n    imageLoader: AsyncImageLoader;\n    containerWidth!: number;\n    containerHeight!: number;\n    debug: boolean;\n\n    constructor(container: HTMLElement, options: FloatingImagesManagerOptionsInterface = {}) {\n        this.container = container;\n        this.debug = options.debug ?? false;\n\n        this.performanceMonitor = new PerformanceMonitor();\n        const perfSettings = this.performanceMonitor.getRecommendedSettings();\n        this.maxImages = options.maxImages ?? perfSettings.maxImages;\n\n        this.intersectionObserver = new IntersectionObserver(entries => {\n            this.isInViewport = entries[0].isIntersecting;\n        }, { threshold: 0 });\n        this.intersectionObserver.observe(this.container);\n\n        this.setupResizeHandling();\n        this.imageLoader = new AsyncImageLoader(this.container);\n        this.updateContainerDimensions();\n\n        this.animateCallback = () => this.animate();\n\n        // Only add callback if not already in AnimationLoop\n        if (!animationLoop.has(this.animateCallback)) {\n            animationLoop.add(this.animateCallback);\n        }\n\n        this.initializeImages();\n    }\n\n    private setupResizeHandling() {\n        this.unsubscribeWindow = resizeManager.onWindow(() => this.handleResize());\n        this.unsubscribeElement = resizeManager.onElement(this.container, () => this.handleResize());\n    }\n\n    private updateContainerDimensions() {\n        const dims = resizeManager.getElement(this.container);\n        this.containerWidth = dims.width;\n        this.containerHeight = dims.height;\n    }\n\n    private async initializeImages() {\n        try {\n            const imgElements = await this.imageLoader.waitForImagesToLoad('.floating-image');\n            const dims = { width: this.containerWidth, height: this.containerHeight };\n            imgElements.slice(0, this.maxImages).forEach(el => this.addExistingImage(el, dims));\n        } catch { /* ignore */ }\n    }\n\n    private addExistingImage(el: HTMLElement, dims: ContainerDimensionsInterface) {\n        if (this.images.length >= this.maxImages) return;\n        const floatingImage = new FloatingImage(el, dims, { debug: this.debug });\n        this.images.push(floatingImage);\n    }\n\n    private handleResize() {\n        if (this._destroyed) return;\n        this.updateContainerDimensions();\n        const dims = { width: this.containerWidth, height: this.containerHeight };\n        this.images.forEach(img => {\n            img.updateSize();\n            img.clampPosition(dims);\n            img.updatePosition();\n        });\n    }\n\n    private animate() {\n        if (this._destroyed) return;\n\n        const skipFrame = this.performanceMonitor.update();\n        if (skipFrame || !this.isInViewport || this.speedMultiplier === 0) return;\n\n        const multiplier = this.speedMultiplier;\n        const dims = { width: this.containerWidth, height: this.containerHeight };\n\n        // Update images and filter out any that return false (destroyed/expired)\n        this.images = this.images.filter(img => img.update(multiplier, dims));\n    }\n\n    public resetAllImagePositions() {\n        const dims = { width: this.containerWidth, height: this.containerHeight };\n        this.images.forEach(img => img.resetPosition(dims));\n    }\n\n    public reinitializeImages() {\n        if (this._destroyed) return;\n\n        // Destroy old images\n        this.images.forEach(img => img.destroy());\n        this.images.length = 0;\n\n        const dims = { width: this.containerWidth, height: this.containerHeight };\n\n        // Re-use existing DOM elements\n        const imgElements = Array.from(this.container.querySelectorAll<HTMLElement>('.floating-image'))\n            .slice(0, this.maxImages);\n\n        imgElements.forEach(el => {\n            const floatingImage = new FloatingImage(el, dims, { debug: this.debug });\n            this.images.push(floatingImage);\n        });\n    }\n\n    destroy() {\n        if (this._destroyed) return;\n\n        this._destroyed = true;\n\n        // Remove callback safely\n        if (animationLoop.has(this.animateCallback)) {\n            animationLoop.remove(this.animateCallback);\n        }\n\n        this.unsubscribeWindow?.();\n        this.unsubscribeElement?.();\n        this.intersectionObserver.disconnect();\n        this.images.forEach(img => img.destroy());\n        this.images.length = 0;\n        this.imageLoader.destroy();\n    }\n}\n", "// src/spaceface/features/Screensaver/ScreensaverController.ts\n\nexport const VERSION = 'nextworld-1.0.0' as const;\n\nimport { eventBus } from \"../../bin/EventBus.js\";\nimport { EventBinder } from \"../../bin/EventBinder.js\";\nimport { InactivityWatcher } from \"../../bin/InactivityWatcher.js\";\nimport { PartialFetcher } from \"../../bin/PartialFetcher.js\";\nimport { FloatingImagesManager } from \"../FloatingImages/FloatingImagesManager.js\";\n\nimport type {\n  ScreensaverControllerOptionsInterface,\n  FloatingImagesManagerInterface\n} from \"../../types/features.js\";\n\nexport class ScreensaverController {\n  private readonly partialUrl: string;\n  private readonly targetSelector: string;\n  private readonly inactivityDelay: number;\n  private screensaverManager: FloatingImagesManagerInterface | null = null;\n  private watcher: InactivityWatcher | null = null;\n  private _destroyed = false;\n  private eventBinder: EventBinder;\n  private _partialLoaded = false;\n  private partialFetcher: typeof PartialFetcher;\n\n  private _onInactivity: () => void;\n  private _onActivity: () => void;\n\n  constructor(\n    options: ScreensaverControllerOptionsInterface & {\n      watcher?: InactivityWatcher;\n      partialFetcher?: typeof PartialFetcher;\n    }\n  ) {\n    this.partialUrl = options.partialUrl;\n    this.targetSelector = options.targetSelector;\n    this.inactivityDelay = options.inactivityDelay ?? 12000;\n\n    this.watcher = options.watcher ?? null;\n    this.partialFetcher = options.partialFetcher ?? PartialFetcher;\n\n    this.eventBinder = new EventBinder(true);\n    this._onInactivity = this.showScreensaver.bind(this);\n    this._onActivity = this.hideScreensaver.bind(this);\n\n    eventBus.emit(\"screensaver:log\", {\n      level: \"info\",\n      message: \"ScreensaverController initialized\",\n      details: {\n        partialUrl: this.partialUrl,\n        targetSelector: this.targetSelector,\n        inactivityDelay: this.inactivityDelay\n      }\n    });\n  }\n\n  async init(): Promise<void> {\n    if (this._destroyed) return;\n\n    try {\n      if (!this.watcher) {\n        this.watcher = InactivityWatcher.getInstance({\n          inactivityDelay: this.inactivityDelay\n        });\n      }\n\n      this.eventBinder.bindBus(\"user:inactive\", this._onInactivity);\n      this.eventBinder.bindBus(\"user:active\", this._onActivity);\n\n      eventBus.emit(\"screensaver:log\", {\n        level: \"info\",\n        message: \"Bound user inactivity/active events\"\n      });\n    } catch (error) {\n      eventBus.emit(\"screensaver:error\", {\n        message: \"Failed to initialize inactivity watcher\",\n        error\n      });\n    }\n  }\n\n  async showScreensaver(): Promise<void> {\n    if (this._destroyed) return;\n\n    try {\n      if (!this._partialLoaded) {\n        await this.partialFetcher.load(this.partialUrl, this.targetSelector);\n        this._partialLoaded = true;\n      }\n\n      const container = document.querySelector<HTMLElement>(this.targetSelector);\n      if (!container) {\n        eventBus.emit(\"screensaver:error\", {\n          message: `Target selector \"${this.targetSelector}\" not found`\n        });\n        return;\n      }\n\n      container.style.opacity = \"0\";\n      container.style.display = \"\";\n      void container.offsetWidth; // force reflow\n      container.style.transition = \"opacity 0.5s ease\";\n      container.style.opacity = \"1\";\n\n      if (!this.screensaverManager) {\n        this.screensaverManager = new FloatingImagesManager(container, { debug: true });\n      } else {\n        this.screensaverManager.destroy();\n        this.screensaverManager = new FloatingImagesManager(container, { debug: true });\n      }\n\n      eventBus.emit(\"screensaver:log\", {\n        level: \"info\",\n        message: \"Screensaver displayed\"\n      });\n    } catch (error) {\n      eventBus.emit(\"screensaver:error\", {\n        message: \"Failed to load or show screensaver\",\n        error\n      });\n    }\n  }\n\n  hideScreensaver(): void {\n    if (this._destroyed) return;\n\n    try {\n      const container = document.querySelector<HTMLElement>(this.targetSelector);\n      if (container) {\n        container.style.transition = \"opacity 0.5s ease\";\n        container.style.opacity = \"0\";\n        setTimeout(() => {\n          container.style.display = \"none\";\n        }, 500);\n      }\n    } catch (error) {\n      eventBus.emit(\"screensaver:error\", {\n        message: \"Failed to hide screensaver\",\n        error\n      });\n    }\n  }\n\n  destroy(): void {\n    if (this._destroyed) return;\n    this._destroyed = true;\n\n    this.hideScreensaver();\n    this.screensaverManager?.destroy();\n    this.eventBinder.unbindAll();\n    this._partialLoaded = false;\n\n    eventBus.emit(\"screensaver:log\", {\n      level: \"info\",\n      message: \"ScreensaverController destroyed\"\n    });\n  }\n}\n", "// src/spaceface/system/bin/DomReadyPromise.ts\n\nexport const VERSION = 'nextworld-1.0.0' as const;\n\nimport { WaitForElementOptions } from '../types/bin.js';\n\n/**\n * Utility class for DOM readiness and waiting for elements to appear.\n * Provides:\n * - A promise for when the DOM is ready (`DOMContentLoaded`).\n * - A helper to wait until specific elements are present in the DOM.\n */\nexport class DomReadyPromise {\n    /** Cached promise that resolves once the DOM is ready */\n    static #readyPromise: Promise<void> | null = null;\n\n    /**\n     * Returns a promise that resolves when the DOM is fully loaded.\n     * Equivalent to listening for `DOMContentLoaded`, but safe to call multiple times.\n     *\n     * @returns Promise that resolves once the DOM is ready.\n     */\n    static ready(): Promise<void> {\n        if (!this.#readyPromise) {\n            this.#readyPromise = document.readyState !== 'loading'\n                ? Promise.resolve()\n                : new Promise<void>(resolve => {\n                    document.addEventListener('DOMContentLoaded', () => resolve(), { once: true });\n                });\n        }\n        return this.#readyPromise;\n    }\n\n    /**\n     * Waits for one or more DOM elements to appear in the document.\n     * Uses a `MutationObserver` to detect added nodes, with optional timeout and abort support.\n     *\n     * @typeParam T - Type of element(s) expected (extends Element).\n     *\n     * @param selectors - CSS selector string or array of selectors to wait for.\n     * @param options - Options to control timeout, root element, and abort signal.\n     * @returns Promise that resolves with the found element (if one selector) or array of elements (if multiple).\n     * @throws DOMException `\"TimeoutError\"` if elements are not found within the timeout.\n     * @throws DOMException `\"AbortError\"` if the operation is aborted via `AbortSignal`.\n     */\n    static waitForElement<T extends Element>(\n        selectors: string | string[],\n        options: WaitForElementOptions = {}\n    ): Promise<T | T[]> {\n        const { timeout = 5000, root = document, signal } = options;\n        const selectorList = Array.isArray(selectors) ? selectors : [selectors];\n        const isMultiple = selectorList.length > 1;\n\n        return new Promise((resolve, reject) => {\n            let timeoutId: number | undefined;\n            const foundElements: Map<string, T> = new Map();\n\n            const cleanup = () => {\n                observer.disconnect();\n                if (timeoutId !== undefined) clearTimeout(timeoutId);\n                if (signal) signal.removeEventListener('abort', onAbort);\n            };\n\n            const resolveFound = () => {\n                const result = selectorList.map(s => foundElements.get(s)!);\n                cleanup();\n                resolve(isMultiple ? result : result[0]);\n            };\n\n            const check = () => {\n                for (const selector of selectorList) {\n                    if (!foundElements.has(selector)) {\n                        const el = root.querySelector<T>(selector);\n                        if (el) foundElements.set(selector, el);\n                    }\n                }\n                if (foundElements.size === selectorList.length) {\n                    resolveFound();\n                    return true;\n                }\n                return false;\n            };\n\n            const onAbort = () => {\n                cleanup();\n                reject(new DOMException('waitForElement aborted', 'AbortError'));\n            };\n\n            if (signal) {\n                if (signal.aborted) return onAbort();\n                signal.addEventListener('abort', onAbort, { once: true });\n            }\n\n            // Initial check before observing\n            if (check()) return;\n\n            // Optimized observer: only reacts to added nodes\n            const observer = new MutationObserver(mutations => {\n                for (const mutation of mutations) {\n                    if (mutation.addedNodes.length > 0) {\n                        if (check()) return;\n                    }\n                }\n            });\n\n            observer.observe(root, { childList: true, subtree: true });\n\n            if (isFinite(timeout) && timeout > 0) {\n                timeoutId = window.setTimeout(() => {\n                    cleanup();\n                    const missing = selectorList.filter(s => !foundElements.has(s));\n                    reject(new DOMException(\n                        `Element(s) \"${missing.join(', ')}\" not found in ${timeout}ms`,\n                        'TimeoutError'\n                    ));\n                }, timeout);\n            }\n        });\n    }\n}\n", "export { DomReadyPromise } from \"../system/bin/DomReadyPromise.js\";\nexport { InactivityWatcher } from \"../system/bin/InactivityWatcher.js\";\nexport { eventBus } from \"../system/bin/EventBus.js\";\nexport { EventBinder } from \"../system/bin/EventBinder.js\";\nexport { EventWatcher } from \"../system/bin/EventWatcher.js\";\nexport { PartialFetcher } from \"../system/bin/PartialFetcher.js\";\nexport { PartialLoader } from \"../system/bin/PartialLoader.js\";\nexport { generateId } from \"../system/bin/generateId.js\";\nexport { ServiceWorkerManager } from \"../system/bin/ServiceWorkerManager.js\";\n\nexport type { FloatingImagesManagerInterface } from '../system/types/features.js';\n", "// src/spaceface/system/bin/generateId.ts\n\nexport const VERSION = 'nextworld-1.0.0' as const;\n\nexport function generateId(prefix: string = 'id', length: number = 9): string {\n  return `${prefix}-${Math.random().toString(36).slice(2, 2 + length)}`;\n}\n", "// src/spaceface/app/bin/main.ts\n\nimport { generateId, eventBus, DomReadyPromise, InactivityWatcher, ServiceWorkerManager, FloatingImagesManagerInterface } from './symlink.js';\n\n// AppConfig\ninterface AppConfigOptions {\n    features?: Record<string, any>;\n    debug?: boolean;\n    [key: string]: any;\n}\n\nexport class AppConfig {\n    public config: Record<string, any>;\n\n    constructor(options: AppConfigOptions = {}) {\n        this.config = {\n            hostname: window.location.hostname,\n            production:\n                window.location.hostname !== 'localhost' &&\n                !window.location.hostname.includes('127.0.0.1'),\n            features: options.features ?? {},\n            ...options,\n        };\n    }\n\n    public get(key: string): any {\n        return key.split('.').reduce((value: any, k: string) => {\n            if (value?.[k] === undefined) {\n                console.log(`[spaceface] Config key \"${key}\" is undefined`);\n                return undefined;\n            }\n            return value[k];\n        }, this.config);\n    }\n}\n\n// Spaceface\ninterface FeatureModuleMap {\n    partialLoader: any;\n    slideplayer: any;\n    screensaver: any;\n    serviceWorker: any;\n}\n\ninterface SpacefaceOptions extends AppConfigOptions {}\n\nexport class Spaceface {\n    static EVENT_LOG = 'log';\n    static EVENT_TELEMETRY = 'telemetry';\n\n    public appConfig: AppConfig;\n    public config: Record<string, any>;\n    public features: Record<string, any>;\n    public debug: boolean;\n    public pageType: string;\n    public startTime: number;\n\n    private featureModules: FeatureModuleMap;\n    private featureCache: Map<keyof FeatureModuleMap, any>;\n    private inactivityWatcher: InactivityWatcher | null;\n    private screensaverController: FloatingImagesManagerInterface | null;\n    private slideshows: any[] = [];\n    private swManager?: ServiceWorkerManager;\n    private _partialUnsub?: () => void;\n    private _partialObserver?: any;\n\n    constructor(options: SpacefaceOptions = {}) {\n        this.appConfig = new AppConfig(options);\n        this.config = this.appConfig.config;\n        this.features = this.config.features ?? {};\n        this.debug = !!this.config.debug;\n\n        this.pageType = this.resolvePageType();\n        this.startTime = performance.now();\n\n        this.featureModules = this.defineFeatureModules();\n        this.featureCache = new Map();\n        this.inactivityWatcher = null;\n        this.screensaverController = null;\n\n        this.validateConfig();\n\n        // Prefetch feature modules\n        (Object.keys(this.featureModules) as (keyof FeatureModuleMap)[]).forEach((name) =>\n            this.loadFeatureModule(name),\n        );\n    }\n\n    private validateConfig(): void {\n        if (!this.config || typeof this.config !== 'object') {\n            throw new Error('Invalid or missing configuration object');\n        }\n        if (!this.config.features) this.log('warn', 'No features specified in config');\n    }\n\n    public log(level: 'debug' | 'info' | 'warn' | 'error', ...args: any[]): void {\n        if (!this.debug && level === 'debug') return;\n        eventBus.emit(Spaceface.EVENT_LOG, { level, args });\n\n        // Dev console logging\n        if (this.debug) {\n            const consoleMethodMap: Record<'debug' | 'info' | 'warn' | 'error', keyof Console> = {\n                debug: 'debug',\n                info: 'info',\n                warn: 'warn',\n                error: 'error',\n            };\n            const method = consoleMethodMap[level] ?? 'log';\n            (console as any)[method](`[spaceface] [${level.toUpperCase()}]`, ...args);\n        }\n    }\n\n    private defineFeatureModules(): FeatureModuleMap {\n        return {\n            partialLoader: () => import('../system/bin/PartialLoader.js'),\n            slideplayer: () => import('../system/features/SlidePlayer/SlidePlayer.js'),\n            screensaver: () => import('../system/features/Screensaver/ScreensaverController.js'),\n            serviceWorker: () => import('../system/bin/ServiceWorkerManager.js'),\n        };\n    }\n\n    private resolvePageType(): string {\n        const path = window.location.pathname;\n        const body = document.body;\n        if (body.dataset.page) return body.dataset.page;\n        if (path === '/') return 'home';\n        if (path === '/app') return 'app';\n        return 'default';\n    }\n\n    private async loadFeatureModule<K extends keyof FeatureModuleMap>(name: K): Promise<any> {\n        if (!this.featureModules[name] || this.featureCache.has(name)) {\n            return this.featureCache.get(name) ?? null;\n        }\n\n        try {\n            const module = await this.featureModules[name]();\n            this.featureCache.set(name, module);\n        } catch (err) {\n            this.log('error', `Failed to load module \"${name}\"`, err);\n            this.featureCache.set(name, null);\n        }\n\n        return this.featureCache.get(name);\n    }\n\n    // ========================================================================\n    // Feature initializers\n    // ========================================================================\n\n    public async initInactivityWatcher(): Promise<void> {\n        try {\n            const { screensaver } = this.features;\n            if (!screensaver || this.inactivityWatcher) return;\n\n            this.inactivityWatcher = InactivityWatcher.getInstance({\n                inactivityDelay: screensaver.delay ?? 3000,\n            });\n        } catch (err) {\n            this.log('error', \"Failed to initialize InactivityWatcher\", err);\n        }\n    }\n\n    public async initSlidePlayer(): Promise<void> {\n        try {\n            const { slideplayer } = this.features;\n            if (!slideplayer) return;\n\n            const module = await this.loadFeatureModule('slideplayer');\n            const SlidePlayer = module?.SlidePlayer;\n            if (!SlidePlayer) return;\n\n            this.slideshows = [];\n            for (const node of document.querySelectorAll('.slideshow-container')) {\n                const slideshow = new SlidePlayer(node, {\n                    interval: slideplayer.interval ?? 5000,\n                    includePicture: slideplayer.includePicture ?? false,\n                });\n                if (slideshow.ready?.then) await slideshow.ready;\n                this.slideshows.push(slideshow);\n            }\n            this.log('info', `${this.slideshows.length} SlidePlayer instance(s) loaded`);\n        } catch (err) {\n            this.log('error', \"Failed to initialize SlidePlayer\", err);\n        }\n    }\n\n    public async initScreensaver(): Promise<void> {\n        try {\n            const { screensaver } = this.features;\n            if (!screensaver?.partialUrl) {\n                this.log('error', \"Screensaver configuration is missing or incomplete\");\n                return;\n            }\n\n            const module = await this.loadFeatureModule('screensaver');\n            const ScreensaverController = module?.ScreensaverController;\n            if (!ScreensaverController) return;\n\n            const id = generateId('screensaver', 9);\n            const container = Object.assign(document.createElement('div'), {\n                id,\n                style:\n                    'position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; z-index: 999; display: none;',\n            });\n            document.body.appendChild(container);\n\n            this.screensaverController = new ScreensaverController({\n                partialUrl: screensaver.partialUrl,\n                targetSelector: `#${id}`,\n                ...(screensaver.delay !== undefined && { inactivityDelay: screensaver.delay }),\n            });\n\n            if (this.screensaverController?.init) {\n                await this.screensaverController.init();\n            }\n\n            eventBus.emit('screensaver:initialized', id);\n            this.log('info', 'Screensaver initialized:', id);\n        } catch (err) {\n            this.log('error', \"Failed to initialize screensaver\", err);\n        }\n    }\n\n    public async initServiceWorker(): Promise<void> {\n        try {\n            if (!this.features.serviceWorker) return;\n\n            const module = await this.loadFeatureModule('serviceWorker');\n            const Manager = module?.default;\n            if (!Manager) return;\n\n            const swManager = new Manager('/sw.js', {}, {\n                strategy: { images: 'cache-first', others: 'network-first' },\n            });\n\n            await swManager.register();\n            swManager.configure();\n            this.swManager = swManager;\n            this.log('info', 'Service Worker registered and configured');\n        } catch (err) {\n            this.log('error', \"Service Worker registration failed\", err);\n        }\n    }\n\n    public async initPartialLoader(): Promise<any> {\n        try {\n            const config = this.features.partialLoader;\n            if (!config?.enabled) return null;\n\n            const module = await this.loadFeatureModule('partialLoader');\n            const PartialLoader = module?.PartialLoader;\n            if (!PartialLoader) return null;\n\n            const loader = new PartialLoader({\n                debug: config.debug ?? this.debug,\n                baseUrl: config.baseUrl ?? '/',\n                cacheEnabled: config.cacheEnabled ?? true,\n            });\n\n            await loader.loadContainer(document);\n            this._partialObserver = loader.watch(document);\n\n            this.log('info', 'PartialLoader initialized');\n            return loader;\n        } catch (err) {\n            this.log('error', \"PartialLoader initialization failed\", err);\n            return null;\n        }\n    }\n\n    public async initPageFeatures(): Promise<void> {\n        try {\n            this.log('info', `Initializing features for page type: ${this.pageType}`);\n            this.log('info', `Page features initialized for: ${this.pageType}`);\n        } catch (err) {\n            this.log('error', `Page feature initialization failed for ${this.pageType}`, err);\n        }\n    }\n\n    // Main init\n    public async init(): Promise<void> {\n        try {\n            this.log('info', `App initialization started (Page: ${this.pageType})`);\n            document.documentElement.classList.add('js-enabled', `page-${this.pageType}`);\n\n            await DomReadyPromise.ready();\n            this.log('info', 'DOM ready');\n\n            const featurePromises = [\n                this.initInactivityWatcher(),\n                this.initPartialLoader(),\n                this.initSlidePlayer(),\n                this.initScreensaver(),\n                this.initServiceWorker(),\n            ];\n\n            await Promise.allSettled(featurePromises);\n            await this.initPageFeatures();\n\n            const duration = (performance.now() - this.startTime).toFixed(2);\n            this.log('info', `App initialized in ${duration}ms`);\n            eventBus.emit(Spaceface.EVENT_TELEMETRY, {\n                type: 'init:duration',\n                value: duration,\n                page: this.pageType,\n            });\n        } catch (err) {\n            this.log('error', \"Critical app initialization error\", err);\n        }\n    }\n\n    public destroy(): void {\n        if (this._partialUnsub) {\n            this._partialUnsub();\n            this._partialUnsub = undefined;\n        }\n    }\n}\n\n// Dev Event Logging\nconst isDev = ['localhost', '127.0.0.1'].some(host =>\n    window.location.hostname.includes(host),\n);\n\nif (isDev) {\n    eventBus.onAny((eventName, payload) => {\n        if (!payload) return console.log(`[spaceface onAny] Event: ${eventName} \u2013 no payload!`);\n        if (typeof payload === 'string') return console.log(`[spaceface onAny] Event: ${eventName} [LOG]`, payload);\n\n        const { level = 'log', message, args, ...otherDetails } = payload;\n        const fullMessage = message ?? args ?? otherDetails ?? '(no details)';\n        const consoleMethodMap: Record<'debug' | 'info' | 'warn' | 'error' | 'log', keyof Console> = {\n            debug: 'debug',\n            info: 'info',\n            warn: 'warn',\n            error: 'error',\n            log: 'log',\n        };\n        const method = consoleMethodMap[level as keyof typeof consoleMethodMap] ?? 'log';\n        (console as any)[method](`[ spaceface onAny ] Event: ${eventName} [${level.toUpperCase()}] \u2013`, fullMessage);\n    });\n}\n\n// Initialize App\nconst app = new Spaceface({\n    features: {\n        partialLoader: { enabled: true, debug: true, baseUrl: '/', cacheEnabled: true },\n        slideplayer: { interval: 5000, includePicture: false, showDots: false },\n        screensaver: { delay: 4500, partialUrl: 'content/feature/screensaver/index.html' },\n        serviceWorker: true,\n    },\n});\n\napp.init();\n"],
  "mappings": "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",
  "names": ["VERSION", "VERSION", "VERSION", "SlidePlayer", "ScreensaverController", "PartialLoader"]
}
