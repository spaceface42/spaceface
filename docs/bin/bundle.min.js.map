{
  "version": 3,
  "sources": ["../../src/system/bin/EventWatcher.ts", "../../src/system/bin/EventBus.ts", "../../src/system/features/bin/timing.ts", "../../src/system/bin/InactivityWatcher.ts", "../../src/system/bin/EventBinder.ts", "../../src/system/bin/PartialFetcher.ts", "../../src/system/bin/PartialLoader.ts", "../../src/system/bin/ServiceWorkerManager.ts", "../../src/system/features/bin/AsyncImageLoader.ts", "../../src/system/features/bin/AnimationLoop.ts", "../../src/system/features/SlidePlayer/SlidePlayer.ts", "../../src/system/features/bin/math.ts", "../../src/system/features/FloatingImages/FloatingImage.ts", "../../src/system/features/bin/PerformanceMonitor.ts", "../../src/system/features/bin/ResizeManager.ts", "../../src/system/features/FloatingImages/FloatingImagesManager.ts", "../../src/system/features/Screensaver/ScreensaverController.ts", "../../src/system/bin/DomReadyPromise.ts", "../../src/app/symlink.ts", "../../src/system/bin/generateId.ts", "../../src/app/main.ts"],
  "sourcesContent": ["// src/spaceface/system/bin/EventWatcher.ts\n\nexport const VERSION = 'nextworld-1.2.0' as const;\n\nexport abstract class EventWatcher {\n    protected readonly target: EventTarget;\n    protected readonly debug: boolean;\n    protected listening = false;\n    protected destroyed = false;\n\n    // DOM listeners storage\n    private domListeners: { type: string; handler: EventListenerOrEventListenerObject }[] = [];\n\n    constructor(target: EventTarget, debug: boolean = false) {\n        if (!(target instanceof EventTarget)) {\n            throw new Error(`${this.constructor.name}: target must be a valid EventTarget.`);\n        }\n        this.target = target;\n        this.debug = debug;\n    }\n\n    protected log(...args: any[]) {\n        if (this.debug) console.log(`[${this.constructor.name}]`, ...args);\n    }\n\n    protected checkDestroyed() {\n        if (this.destroyed) {\n            throw new Error(`${this.constructor.name} has been destroyed.`);\n        }\n    }\n\n    public destroy() {\n        if (this.destroyed) return;\n        this.log(\"Destroying watcher\");\n        try {\n            this.removeAllDomListeners();\n            this.removeEventListeners();\n        } finally {\n            this.destroyed = true;\n        }\n    }\n\n    /** Add a DOM listener and store it for later removal */\n    protected addDomListener(type: string, handler: EventListenerOrEventListenerObject) {\n        this.target.addEventListener(type, handler);\n        this.domListeners.push({ type, handler });\n    }\n\n    /** Remove all stored DOM listeners */\n    protected removeAllDomListeners() {\n        for (const { type, handler } of this.domListeners) {\n            this.target.removeEventListener(type, handler);\n        }\n        this.domListeners = [];\n    }\n\n    /** Must be implemented by subclasses */\n    protected abstract addEventListeners(): void;\n    protected abstract removeEventListeners(): void;\n}\n", "// src/spaceface/system/bin/EventBus.ts\n\nexport const VERSION = 'nextworld-1.2.0' as const;\n\nimport {\n    UnsubscribeFn,\n    ListenerInterface,\n    AnyListenerInterface,\n    EventBusErrorPayloadInterface,\n    EventBusInterface\n} from '../types/bin.js';\n\nexport class EventBus implements EventBusInterface {\n    private listeners: Record<string, ListenerInterface[]> = {};\n    private anyListeners: AnyListenerInterface[] = [];\n    private onceWrappers = new WeakMap<Function, Function>();\n\n    on<T = any>(event: string, fn: (payload: T) => any, priority = 0): UnsubscribeFn {\n        const list = this.listeners[event] ??= [];\n        // Insert in sorted order without re-sorting whole array\n        const listener: ListenerInterface = { fn, priority };\n        let i = list.length;\n        while (i > 0 && list[i - 1].priority < priority) i--;\n        list.splice(i, 0, listener);\n\n        return () => this.off(event, fn);\n    }\n\n    once<T = any>(event: string, fn: (payload: T) => any, priority = 0) {\n        const wrapper = (payload: T) => {\n            this.off(event, wrapper);\n            fn(payload);\n        };\n        this.onceWrappers.set(fn, wrapper);\n        this.on(event, wrapper, priority);\n    }\n\n    onAny(fn: (event: string, payload: any) => any, priority = 0): UnsubscribeFn {\n        const listener: AnyListenerInterface = { fn, priority };\n        let i = this.anyListeners.length;\n        while (i > 0 && this.anyListeners[i - 1].priority < priority) i--;\n        this.anyListeners.splice(i, 0, listener);\n\n        return () => this.offAny(fn);\n    }\n\n    off(event: string, fn: Function) {\n        const list = this.listeners[event];\n        if (!list) return;\n\n        const wrapper = this.onceWrappers.get(fn) ?? fn;\n        this.listeners[event] = list.filter(l => l.fn !== wrapper);\n    }\n\n    offAny(fn: Function) {\n        this.anyListeners = this.anyListeners.filter(l => l.fn !== fn);\n    }\n\n    emit<T = any>(event: string, payload?: T) {\n        if (!event) return this._handleError(\"Event name is undefined or empty\", new Error());\n\n        const list = this.listeners[event] ?? [];\n        for (const l of list) {\n            try { l.fn(payload); }\n            catch (err) { this._handleError(`Error in listener for \"${event}\"`, err); }\n        }\n\n        for (const l of this.anyListeners) {\n            try { l.fn(event, payload); }\n            catch (err) { this._handleError(`Error in any-listener for \"${event}\"`, err); }\n        }\n    }\n\n    async emitAsync<T = any>(event: string, payload?: T): Promise<any[]> {\n        if (!event) { this._handleError(\"Event name is undefined or empty\", new Error()); return []; }\n\n        const results: any[] = [];\n        const list = this.listeners[event] ?? [];\n\n        for (const l of list) {\n            try { results.push(await l.fn(payload)); }\n            catch (err) { this._handleError(`Async error in listener for \"${event}\"`, err); }\n        }\n\n        for (const l of this.anyListeners) {\n            try { results.push(await l.fn(event, payload)); }\n            catch (err) { this._handleError(`Async error in any-listener for \"${event}\"`, err); }\n        }\n\n        return results;\n    }\n\n    removeAllListeners(event?: string) {\n        if (!event) {\n            this.listeners = {};\n            this.anyListeners = [];\n        } else if (event === \"any\") {\n            this.anyListeners = [];\n        } else {\n            delete this.listeners[event];\n        }\n    }\n\n    hasListeners(event: string) {\n        return event === \"any\"\n            ? this.anyListeners.length > 0\n            : (this.listeners[event]?.length ?? 0) > 0;\n    }\n\n    listenerCount(event: string) {\n        return event === \"any\"\n            ? this.anyListeners.length\n            : (this.listeners[event]?.length ?? 0);\n    }\n\n    eventNames() {\n        return Object.keys(this.listeners).filter(e => this.listeners[e].length > 0);\n    }\n\n    getListeners(event: string) {\n        return event === \"any\"\n            ? this.anyListeners.map(l => l.fn)\n            : (this.listeners[event] ?? []).map(l => l.fn);\n    }\n\n    private _handleError(message: string, error: any) {\n        console.error(message, error);\n        if (message.includes(\"eventbus:error\")) return;\n        try {\n            this.emit<EventBusErrorPayloadInterface>(\"eventbus:error\", { message, error });\n        } catch (e) {\n            console.error('EventBus failed to emit \"eventbus:error\":', e);\n        }\n    }\n}\n\nexport const eventBus = new EventBus();\n", "// src/spaceface/system/features/bin/timing.ts\n\nexport const VERSION = 'nextworld-1.0.0' as const;\n\n/** Generic type: function with cancel method */\nexport type CancellableFunction<T extends (...args: any[]) => void> = T & { cancel: () => void };\n\n/** Internal helper: manages a timeout with cancel support */\nfunction createTimeout(): { id: number | null; set: (fn: () => void, ms: number) => void; cancel: () => void } {\n  let id: number | null = null;\n\n  return {\n    get id() { return id; },\n    set(fn: () => void, ms: number) {\n      if (id !== null) clearTimeout(id);\n      id = window.setTimeout(() => {\n        id = null;\n        fn();\n      }, ms);\n    },\n    cancel() {\n      if (id !== null) {\n        clearTimeout(id);\n        id = null;\n      }\n    },\n  };\n}\n\n/**\n * Creates a debounced function that delays invoking `func` until after `delay` ms\n * have elapsed since the last call.\n *\n * @example\n * ```ts\n * const saveInput = debounce((value: string) => console.log(\"Saving:\", value), 300);\n * saveInput(\"Hello\");\n * saveInput.cancel(); // cancels any pending call\n * ```\n */\nexport function debounce<T extends (...args: any[]) => void>(\n  func: T,\n  delay = 300,\n  immediate = false\n): CancellableFunction<(...args: Parameters<T>) => void> {\n  const timer = createTimeout();\n\n  function debounced(this: ThisParameterType<T>, ...args: Parameters<T>) {\n    const callNow = immediate && timer.id === null;\n\n    timer.set(() => {\n      if (!immediate) func.apply(this, args);\n    }, delay);\n\n    if (callNow) func.apply(this, args);\n  }\n\n  debounced.cancel = () => timer.cancel();\n\n  return debounced;\n}\n\n/**\n * Creates a throttled function that invokes `func` at most once per `delay` ms.\n *\n * @example\n * ```ts\n * const logScroll = throttle(() => console.log(\"Scroll!\"), 500, { leading: true, trailing: true });\n * window.addEventListener(\"scroll\", logScroll);\n * logScroll.cancel(); // cancels any pending trailing call\n * ```\n */\nexport function throttle<T extends (...args: any[]) => void>(\n  func: T,\n  delay = 100,\n  options: { leading?: boolean; trailing?: boolean } = {}\n): CancellableFunction<(...args: Parameters<T>) => void> {\n  const { leading = true, trailing = true } = options;\n  let lastCall = 0;\n  let lastArgs: Parameters<T> | null = null;\n  let lastThis: ThisParameterType<T> | null = null;\n  const timer = createTimeout();\n\n  function invoke() {\n    lastCall = leading ? Date.now() : 0;\n    func.apply(lastThis!, lastArgs!);\n    lastArgs = lastThis = null;\n  }\n\n  function throttled(this: ThisParameterType<T>, ...args: Parameters<T>) {\n    const now = Date.now();\n    if (lastCall === 0 && !leading) lastCall = now;\n\n    lastArgs = args;\n    lastThis = this;\n\n    const remaining = delay - (now - lastCall);\n\n    if (remaining <= 0 || remaining > delay) {\n      timer.cancel();\n      invoke();\n    } else if (timer.id === null && trailing) {\n      timer.set(() => {\n        if (trailing && lastArgs) invoke();\n      }, remaining);\n    }\n  }\n\n  throttled.cancel = () => {\n    timer.cancel();\n    lastCall = 0;\n    lastArgs = lastThis = null;\n  };\n\n  return throttled;\n}\n", "// src/spaceface/system/bin/InactivityWatcher.ts\n\nexport const VERSION = 'nextworld-1.2.0' as const;\n\nimport { EventWatcher } from './EventWatcher.js';\nimport { eventBus } from './EventBus.js';\nimport { throttle } from '../features/bin/timing.js';\n\nexport interface InactivityWatcherOptionsInterface {\n    inactivityDelay: number;\n    debug?: boolean;\n}\n\nexport class InactivityWatcher extends EventWatcher {\n    private static _instance: InactivityWatcher | null = null;\n\n    private inactivityDelay: number;\n    private lastActiveAt: number;\n    private timer?: number;\n    private userIsInactive: boolean = false;\n\n    constructor(target: EventTarget, options: InactivityWatcherOptionsInterface) {\n        super(target, options.debug ?? false);\n        this.inactivityDelay = options.inactivityDelay;\n        this.lastActiveAt = Date.now();\n\n        this.log(`Initialized with inactivityDelay=${this.inactivityDelay}ms`);\n\n        this.addEventListeners();\n    }\n\n    static getInstance(options: InactivityWatcherOptionsInterface & { target?: EventTarget }): InactivityWatcher {\n        if (!this._instance) {\n            this._instance = new InactivityWatcher(options.target ?? document, options);\n        }\n        return this._instance;\n    }\n\n    protected addEventListeners(): void {\n        const throttledReset = throttle(() => this.resetTimer(), 200);\n\n        // Track user activity\n        this.target.addEventListener('mousemove', throttledReset);\n        this.target.addEventListener('keydown', throttledReset);\n        this.target.addEventListener('scroll', throttledReset);\n        this.target.addEventListener('visibilitychange', throttledReset);\n\n        // Start the inactivity timer\n        this.resetTimer();\n    }\n\n    protected removeEventListeners(): void {\n        this.target.removeEventListener('mousemove', this.resetTimer);\n        this.target.removeEventListener('keydown', this.resetTimer);\n        this.target.removeEventListener('scroll', this.resetTimer);\n        this.target.removeEventListener('visibilitychange', this.resetTimer);\n\n        if (this.timer) clearTimeout(this.timer);\n    }\n\n    private resetTimer() {\n        const now = Date.now();\n        this.lastActiveAt = now;\n\n        if (this.userIsInactive) {\n            this.userIsInactive = false;\n            eventBus.emit('user:active', {\n                lastActiveAt: this.lastActiveAt,\n                inactivityDelay: this.inactivityDelay,\n                visible: document.visibilityState === 'visible'\n            });\n            this.log('User is active');\n        }\n\n        if (this.timer) clearTimeout(this.timer);\n        this.timer = window.setTimeout(() => this.setInactive(), this.inactivityDelay);\n    }\n\n    private setInactive() {\n        this.userIsInactive = true;\n        const now = Date.now();\n        eventBus.emit('user:inactive', {\n            lastActiveAt: this.lastActiveAt,\n            inactiveAt: now,\n            inactivityDelay: this.inactivityDelay,\n            visible: document.visibilityState === 'visible'\n        });\n        this.log('User is inactive');\n    }\n}\n", "// src/spaceface/system/bin/EventBinder.ts\n\n/**\n * EventBinder v1.2.2\n *\n * Manages the lifecycle of EventBus and DOM event bindings with\n * support for auto-unbinding, debugging, and scoped lifetimes.\n *\n * Provides a single utility class for safely attaching and\n * detaching event handlers in a structured way.\n */\nexport const VERSION = 'nextworld-1.2.2' as const;\n\nimport {\n  DomBinding,\n  EventBinderStats,\n  EventBinderInterface,\n  BusBindingInterface\n} from \"../types/bin.js\";\n\nimport { eventBus } from \"./EventBus.js\";\n\ninterface IEventBinderDebugPayload {\n  method: string;\n  details: unknown;\n}\n\n/**\n * EventBinder\n *\n * A utility for managing event bindings across EventBus and DOM.\n * Keeps track of all active bindings and supports automatic cleanup.\n */\nexport class EventBinder implements EventBinderInterface {\n  private IBusBindings: BusBindingInterface[] = [];\n  private domBindings: DomBinding[] = [];\n  private debugMode: boolean;\n\n  /**\n   * Create a new EventBinder.\n   * @param debug Enable debug logging (emits `debug:EventBinder` events)\n   */\n  constructor(debug = false) {\n    this.debugMode = debug;\n  }\n\n    /** Emit debug info via EventBus if debug mode is enabled */\n    private debug(method: string, details: unknown): void {\n        if (!this.debugMode) return;\n        try {\n            const payload: IEventBinderDebugPayload = { method, details };\n            eventBus.emit<IEventBinderDebugPayload>(\"debug:EventBinder\", payload);\n        } catch {\n            // ignore debug errors\n        }\n    }\n\n    /**\n     * Attach binder lifetime to an AbortSignal.\n     * All bindings will be unbound automatically when the signal aborts.\n     * @param signal AbortSignal to link binder lifetime to\n     */\n    attachTo(signal: AbortSignal): void {\n        if (signal.aborted) {\n            this.unbindAll();\n            return;\n        }\n        const listener = () => this.unbindAll();\n        signal.addEventListener(\"abort\", listener, { once: true });\n    }\n\n    /**\n     * Bind a handler to an EventBus event.\n     * @param event Event name\n     * @param handler Event handler function\n     */\n    bindBus(event: string, handler: (...args: any[]) => void): void {\n        if (this.IBusBindings.find(b => b.event === event && b.handler === handler)) {\n            this.debug(\"bus:bind:duplicate\", { event, handler });\n            return;\n        }\n        try {\n            const unsubscribe = eventBus.on(event, handler);\n            this.IBusBindings.push({ event, handler, unsubscribe });\n            this.debug(\"bus:bind\", { event, handler });\n        } catch (err) {\n            console.error(`EventBinder: Failed to bind bus event \"${event}\"`, err);\n        }\n    }\n\n    /**\n     * Bind a DOM event handler with automatic tracking and unbind support.\n     * @param target Target element or EventTarget\n     * @param event Event name\n     * @param handler Event listener\n     * @param options Optional event listener options\n     */\n    bindDOM(\n        target: EventTarget,\n        event: string,\n        handler: EventListenerOrEventListenerObject,\n        options: AddEventListenerOptions | boolean = false\n    ): void {\n        if (!(target instanceof EventTarget)) {\n            console.warn(\"EventBinder: Invalid DOM target\", target);\n            return;\n        }\n\n        if (this.domBindings.find(b => b.target === target && b.event === event && b.handler === handler)) {\n            this.debug(\"dom:bind:duplicate\", { event, handler, target });\n            return;\n        }\n\n        const controller = new AbortController();\n        const normalizedOptions: AddEventListenerOptions =\n            typeof options === \"boolean\"\n                ? { capture: options, signal: controller.signal }\n                : { ...options, signal: controller.signal };\n\n        try {\n            target.addEventListener(event, handler, normalizedOptions);\n            this.domBindings.push({ target, event, handler, options: normalizedOptions, controller });\n            this.debug(\"dom:bind\", { event, handler, target });\n        } catch (err) {\n            console.error(`EventBinder: Failed to bind DOM event \"${event}\"`, err);\n        }\n    }\n\n    /**\n     * Unbind all EventBus and DOM event handlers managed by this binder.\n     */\n    unbindAll(): void {\n        this.debug(\"unbindAll\", {\n            bus: this.IBusBindings.length,\n            dom: this.domBindings.length,\n        });\n\n        for (const b of this.IBusBindings) {\n            try {\n                b.unsubscribe();\n                this.debug(\"bus:unbind\", { event: b.event });\n            } catch (err) {\n                console.error(`EventBinder: Failed to unbind bus \"${b.event}\"`, err);\n            }\n        }\n\n        /**\n         * Unbind all EventBus and DOM event handlers managed by this binder.\n         */\n        for (const b of this.domBindings) {\n            try {\n                b.controller.abort();\n                this.debug(\"dom:unbind\", { event: b.event, target: b.target });\n            } catch (err) {\n                console.error(`EventBinder: Failed to unbind DOM \"${b.event}\"`, err);\n            }\n        }\n\n        this.IBusBindings = [];\n        this.domBindings = [];\n    }\n\n    /**\n     * Unbind a specific EventBus handler.\n     * @param event Event name\n     * @param handler Event handler\n     * @returns True if successfully unbound, false otherwise\n     */\n    unbindBus(event: string, handler: (...args: any[]) => void): boolean {\n        const i = this.IBusBindings.findIndex(b => b.event === event && b.handler === handler);\n        if (i === -1) return false;\n\n        try {\n            this.IBusBindings[i].unsubscribe();\n            this.IBusBindings.splice(i, 1);\n            this.debug(\"bus:unbind:single\", { event, handler });\n            return true;\n        } catch (err) {\n            console.error(`EventBinder: Failed to unbind bus \"${event}\"`, err);\n            return false;\n        }\n    }\n\n    /**\n     * Unbind a specific DOM event handler.\n     * @param target Target element\n     * @param event Event name\n     * @param handler Event listener\n     * @returns True if successfully unbound, false otherwise\n     */\n    unbindDOM(target: EventTarget, event: string, handler: EventListenerOrEventListenerObject): boolean {\n        const i = this.domBindings.findIndex(b => b.target === target && b.event === event && b.handler === handler);\n        if (i === -1) return false;\n\n        try {\n            this.domBindings[i].controller.abort();\n            this.domBindings.splice(i, 1);\n            this.debug(\"dom:unbind:single\", { event, target });\n            return true;\n        } catch (err) {\n            console.error(`EventBinder: Failed to unbind DOM \"${event}\"`, err);\n            return false;\n        }\n    }\n\n    /**\n     * Get binding statistics.\n     * @returns Number of bus and DOM events currently bound\n     */\n    getStats(): EventBinderStats {\n        return {\n            busEvents: this.IBusBindings.length,\n            domEvents: this.domBindings.length,\n            totalEvents: this.IBusBindings.length + this.domBindings.length,\n        };\n    }\n\n    /**\n     * Check if there are any active bindings.\n     * @returns True if any EventBus or DOM bindings exist\n     */\n    hasBindings(): boolean {\n        return this.IBusBindings.length > 0 || this.domBindings.length > 0;\n    }\n\n    /**\n     * Get details of all active bindings.\n     * @returns Object with arrays of bus and DOM binding info\n     */\n    getBindingDetails(): { bus: string[]; dom: string[] } {\n        return {\n            bus: this.IBusBindings.map(b => b.event),\n            dom: this.domBindings.map(b => `${b.event}@${b.target.constructor.name}`),\n        };\n    }\n\n    /**\n     * Utility wrapper for scoped binding lifetimes.\n     * Automatically unbinds after callback execution (sync or async).\n     *\n     * @param callback Function that receives a temporary EventBinder\n     * @param debug Enable debug mode\n     * @returns The callback result\n     */\n    static withAutoUnbind<T>(\n        callback: (binder: EventBinder) => T | Promise<T>,\n        debug = false\n    ): Promise<T> | T {\n        const binder = new EventBinder(debug);\n        try {\n            const result = callback(binder);\n            if (result instanceof Promise) {\n                return result.finally(() => binder.unbindAll());\n            } else {\n                binder.unbindAll();\n                return result;\n            }\n        } catch (err) {\n            binder.unbindAll();\n            throw err;\n        }\n    }\n}\n\n/** Default shared EventBinder instance */\nexport const eventBinder = new EventBinder();\n", "// src/spaceface/system/bin/PartialFetcher.ts\n\nexport const VERSION = 'nextworld-1.0.0' as const;\n\nimport { eventBus } from \"./EventBus.js\";\nimport { EventBinder } from \"./EventBinder.js\";\nimport { PartialFetchOptionsInterface } from \"../types/bin.js\";\n\nexport class PartialFetcher {\n    /**\n     * Loads HTML from a URL and injects it into the target element.\n     * Emits lifecycle events: partial:load:start, partial:load:success, partial:load:error, partial:load:complete\n     */\n    static async load(\n        url: string,\n        targetSelector: string,\n        options: PartialFetchOptionsInterface = {}\n    ): Promise<{ container: HTMLElement; html: string }> {\n        const { replace = true, signal, withBindings, debugBindings = false } = options;\n\n        const runLoad = async (): Promise<{ container: HTMLElement; html: string }> => {\n            const basePayload = { url, targetSelector };\n            eventBus.emit(\"partial:load:start\", basePayload);\n\n            try {\n                const fetchOptions = signal ? { signal } : undefined;\n                const response = await fetch(url, fetchOptions);\n                if (!response.ok) throw new Error(`Fetch failed with status ${response.status}`);\n\n                const html = (await response.text()).trim();\n                const container = document.querySelector<HTMLElement>(targetSelector);\n                if (!container) throw new Error(`Target container not found: ${targetSelector}`);\n\n                const template = document.createElement(\"template\");\n                template.innerHTML = html;\n\n                if (replace) container.replaceChildren(...template.content.childNodes);\n                else container.append(...template.content.childNodes);\n\n                eventBus.emit(\"partial:load:success\", { ...basePayload, html });\n                return { container, html };\n            } catch (error) {\n                eventBus.emit(\"partial:load:error\", { ...basePayload, error });\n                throw error;\n            } finally {\n                eventBus.emit(\"partial:load:complete\", basePayload);\n            }\n        };\n\n        if (typeof withBindings === \"function\") {\n            return EventBinder.withAutoUnbind(async (binder) => {\n                if (signal) binder.attachTo(signal);\n                withBindings(binder);\n                return runLoad();\n            }, debugBindings);\n        } else {\n            return runLoad();\n        }\n    }\n}\n", "// src/spaceface/system/bin/PartialLoader.ts\n\nexport const VERSION = 'nextworld-1.0.0' as const;\n\nimport { debounce } from \"../features/bin/timing.js\";\nimport { eventBus } from \"./EventBus.js\";\n\nimport {\n    PartialLoaderOptionsInterface,\n    PartialLoadResultInterface,\n    PartialInfoInterface\n} from \"../types/bin.js\";\n\nexport class PartialLoader {\n    private cache = new Map<string, string>();\n    private loadingPromises = new Map<string, Promise<string>>();\n    private loadedPartials = new Map<string, boolean>();\n    private options: Required<PartialLoaderOptionsInterface>;\n\n    constructor(options: PartialLoaderOptionsInterface = {}) {\n        this.options = {\n            debug: false,\n            baseUrl: \"/\",\n            cacheEnabled: true,\n            timeout: 10000,\n            retryAttempts: 3,\n            ...options,\n        };\n    }\n\n    private logDebug(msg: string, data?: unknown) {\n        if (this.options.debug) console.debug(`[PartialLoader] ${msg}`, data);\n    }\n\n    async load(\n        input: HTMLLinkElement | PartialInfoInterface | (HTMLLinkElement | PartialInfoInterface)[]\n    ): Promise<PartialLoadResultInterface[]> {\n        const items = Array.isArray(input) ? input : [input];\n        const results: PartialLoadResultInterface[] = [];\n\n        for (const item of items) {\n            try {\n                if (item instanceof HTMLLinkElement) {\n                    results.push(await this.loadLink(item));\n                } else {\n                    results.push(await this.loadInfo(item));\n                }\n            } catch {\n                const url = item instanceof HTMLLinkElement\n                    ? item.getAttribute(\"src\") || \"\"\n                    : item.url;\n                results.push({ success: false, url, cached: false });\n            }\n        }\n\n        eventBus.emit(\"partials:allLoaded\", { count: results.length });\n        return results;\n    }\n\n    private loadLink(link: HTMLLinkElement) {\n        const src = link.getAttribute(\"src\");\n        if (!src) throw new Error(\"Partial link missing src\");\n        return this.loadUrl(this.resolveUrl(src), link);\n    }\n\n    private loadInfo(info: PartialInfoInterface) {\n        return this.loadUrl(this.resolveUrl(info.url), info.container, info.id);\n    }\n\n    private async loadUrl(url: string, container: Element | ParentNode, id?: string): Promise<PartialLoadResultInterface> {\n        try {\n            if (this.loadingPromises.has(url)) await this.loadingPromises.get(url)!;\n\n            if (this.options.cacheEnabled && this.cache.has(url)) {\n                this.insertHTML(container, this.cache.get(url)!);\n                this.loadedPartials.set(id || url, true);\n                eventBus.emit(\"partial:loaded\", { url, cached: true });\n                return { success: true, url, cached: true };\n            }\n\n            const promise = this.fetchPartial(url);\n            this.loadingPromises.set(url, promise);\n\n            const html = await promise;\n            if (this.options.cacheEnabled) this.cache.set(url, html);\n\n            this.insertHTML(container, html);\n            this.loadedPartials.set(id || url, true);\n            eventBus.emit(\"partial:loaded\", { url, cached: false });\n            return { success: true, url, cached: false };\n        } catch (error) {\n            this.showError(container, error as Error);\n            eventBus.emit(\"partial:error\", { url, error });\n            throw error;\n        } finally {\n            this.loadingPromises.delete(url);\n        }\n    }\n\n    private async fetchPartial(url: string, attempt = 1): Promise<string> {\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), this.options.timeout);\n\n        try {\n            const res = await fetch(url, { signal: controller.signal, headers: { Accept: \"text/html\" } });\n            if (!res.ok) throw new Error(`HTTP ${res.status}`);\n            const html = (await res.text()).trim();\n            if (!html) throw new Error(\"Empty response\");\n            return html;\n        } catch (err) {\n            if (attempt < this.options.retryAttempts) {\n                await this.delay(Math.min(2 ** attempt * 100, 5000));\n                return this.fetchPartial(url, attempt + 1);\n            }\n            throw err;\n        } finally {\n            clearTimeout(timeoutId);\n        }\n    }\n\n    private insertHTML(container: ParentNode | Element, html: string) {\n        const template = document.createElement(\"template\");\n        template.innerHTML = html;\n\n        if (container instanceof HTMLLinkElement) {\n            container.replaceWith(...template.content.childNodes);\n        } else if (container instanceof Element) {\n            container.innerHTML = \"\";\n            container.append(...template.content.childNodes);\n        } else {\n            container.append(...template.content.childNodes);\n        }\n    }\n\n    private showError(container: ParentNode | Element, error: Error) {\n        const div = document.createElement(\"div\");\n        div.className = \"partial-error\";\n        div.textContent = \"Partial load failed\";\n        if (this.options.debug) div.textContent += `: ${error.message}`;\n\n        if (container instanceof HTMLLinkElement) {\n            container.replaceWith(div);\n        } else if (container instanceof Element) {\n            container.innerHTML = \"\";\n            container.appendChild(div);\n        } else {\n            container.appendChild(div);\n        }\n    }\n\n    isPartialLoaded(id: string) {\n        return this.loadedPartials.has(id);\n    }\n\n    private resolveUrl(src: string) {\n        if (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(src) || src.startsWith(\"//\")) return src;\n\n        try {\n            const base = this.options.baseUrl || window.location.origin + \"/\";\n            const url = new URL(src, base).toString();\n            return url.startsWith(window.location.origin)\n                ? url.slice(window.location.origin.length) || \"/\"\n                : url;\n        } catch {\n            return src;\n        }\n    }\n\n    private delay(ms: number) {\n        return new Promise(r => setTimeout(r, ms));\n    }\n\n    async loadContainer(container: ParentNode = document): Promise<PartialLoadResultInterface[]> {\n        const links = container.querySelectorAll<HTMLLinkElement>('link[rel=\"partial\"][src]');\n        if (!links.length) return [];\n        return this.load(Array.from(links));\n    }\n\n    watch(container: HTMLElement | Document = document.body) {\n        if (!window.MutationObserver) return;\n        const observer = new MutationObserver(\n            debounce(() => this.loadContainer(container), 100)\n        );\n        observer.observe(container, { childList: true, subtree: true });\n        return observer;\n    }\n}\n", "// src/spaceface/system/bin/ServiceWorkerManager.ts\n\nexport const VERSION = 'nextworld-1.0.0' as const;\nexport class ServiceWorkerManager {\n  private swPath: string;\n  private options: RegistrationOptions;\n  private customConfig: Record<string, any>;\n  private registration: ServiceWorkerRegistration | null = null;\n  private isSupported: boolean;\n\n  constructor(\n    swPath: string = '/sw.js',\n    options: RegistrationOptions = {},\n    customConfig: Record<string, any> = {}\n  ) {\n    this.swPath = swPath;\n    this.options = {\n      scope: '/',\n      updateViaCache: 'none',\n      ...options,\n    };\n    this.customConfig = customConfig;\n    this.isSupported = 'serviceWorker' in navigator;\n  }\n\n  /**\n   * Register the service worker\n   */\n  public async register(): Promise<ServiceWorkerRegistration | null> {\n    if (!this.isSupported) {\n      throw new Error('ServiceWorker not supported');\n    }\n\n    try {\n      this.registration = await navigator.serviceWorker.register(\n        this.swPath,\n        this.options\n      );\n\n      this.setupEventListeners();\n      return this.registration;\n    } catch (error) {\n      console.error('SW registration failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Apply custom configuration after registration\n   */\n  public configure(): void {\n    if (this.customConfig.strategy) {\n      this.setStrategy(this.customConfig.strategy);\n    }\n  }\n\n  /**\n   * Unregister the service worker\n   */\n  public async unregister(): Promise<boolean> {\n    if (!this.registration) return false;\n\n    try {\n      return await this.registration.unregister();\n    } catch (error) {\n      console.error('SW unregistration failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Update the service worker\n   */\n  public async update(): Promise<void | null> {\n    if (!this.registration) return null;\n\n    try {\n      // registration.update() returns void\n      await this.registration.update();\n      return null;\n    } catch (error) {\n      console.error('SW update failed:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Get registration status\n   */\n  public getStatus(): 'unregistered' | 'installing' | 'waiting' | 'active' | 'unknown' {\n    if (!this.registration) return 'unregistered';\n\n    if (this.registration.installing) return 'installing';\n    if (this.registration.waiting) return 'waiting';\n    if (this.registration.active) return 'active';\n\n    return 'unknown';\n  }\n\n  /**\n   * Setup lifecycle event listeners\n   */\n  private setupEventListeners(): void {\n    if (!this.registration) return;\n\n    this.registration.addEventListener('updatefound', () => {\n      const newWorker = this.registration?.installing;\n      if (!newWorker) return;\n\n      newWorker.addEventListener('statechange', () => {\n        if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n          this.onUpdateAvailable?.(newWorker);\n        }\n      });\n    });\n\n    navigator.serviceWorker.addEventListener('controllerchange', () => {\n      this.onControllerChange?.();\n    });\n  }\n\n  /**\n   * Send a message to the service worker\n   */\n  public async postMessage(message: any, transfer?: Transferable[]): Promise<void> {\n    const sw = navigator.serviceWorker.controller;\n    if (!sw) throw new Error('No active service worker');\n\n    if (transfer) {\n      sw.postMessage(message, { transfer });\n    } else {\n      sw.postMessage(message);\n    }\n  }\n\n  /**\n   * Wait for message from service worker\n   */\n  public waitForMessage(timeout: number = 5000): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(() => reject(new Error('Message timeout')), timeout);\n\n      const handler = (event: MessageEvent) => {\n        clearTimeout(timer);\n        navigator.serviceWorker.removeEventListener('message', handler);\n        resolve(event.data);\n      };\n\n      navigator.serviceWorker.addEventListener('message', handler);\n    });\n  }\n\n  /**\n   * Activate the waiting service worker\n   */\n  public async activateWaiting(): Promise<boolean> {\n    if (!this.registration?.waiting) return false;\n\n    try {\n      await this.postMessage({ type: 'SKIP_WAITING' });\n      return true;\n    } catch (error) {\n      console.error('Failed to activate waiting SW:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Set runtime cache strategy (e.g., cache-first or network-first)\n   */\n  public setStrategy(config: Record<string, any> = {}): void {\n    if (!navigator.serviceWorker.controller) {\n      console.warn('No active SW to set strategy');\n      return;\n    }\n\n    this.postMessage({\n      type: 'SET_STRATEGY',\n      payload: config,\n    });\n  }\n\n  // Optional hooks for integration - override as needed\n  public onUpdateAvailable?(newWorker: ServiceWorker): void;\n  public onControllerChange?(): void;\n}\n", "// src/spaceface/system/features/bin/AsyncImageLoader.ts\n\nexport const VERSION = 'nextworld-1.2.0' as const;\n\nimport {\n  AsyncImageLoaderOptions,\n  SourceDataInterface,\n  ImageMetadataInterface,\n  ImageLoadResultInterface\n} from '../../types/bin.js';\n\nexport class AsyncImageLoader {\n  private container: Element | null;\n  private includePicture: boolean;\n  private cache = new WeakMap<HTMLImageElement, boolean>();\n  private destroyed = false;\n\n  constructor(container: Element, options: AsyncImageLoaderOptions = {}) {\n    if (!(container instanceof Element)) {\n      throw new Error(\"AsyncImageLoader: container must be a DOM Element.\");\n    }\n    this.container = container;\n    this.includePicture = options.includePicture ?? false;\n  }\n\n  private ensureActive(): void {\n    if (this.destroyed || !this.container) {\n      throw new Error(\"AsyncImageLoader: Instance destroyed.\");\n    }\n  }\n\n  public getImages(selector = \"img\"): HTMLImageElement[] {\n    this.ensureActive();\n    if (!selector.trim()) return [];\n\n    const images = new Set<HTMLImageElement>();\n\n    this.container!.querySelectorAll(selector).forEach(el => {\n      if (el instanceof HTMLImageElement) {\n        if (!this.includePicture && el.closest(\"picture\")) return;\n        images.add(el);\n      }\n    });\n\n    return [...images];\n  }\n\n  // ---------- Overloads ----------\n  public async waitForImagesToLoad(\n    selector?: string,\n    includeFailed?: false\n  ): Promise<HTMLImageElement[]>;\n\n  public async waitForImagesToLoad(\n    selector: string,\n    includeFailed: true\n  ): Promise<ImageLoadResultInterface[]>;\n\n  // ---------- Implementation ----------\n  public async waitForImagesToLoad(\n    selector = \"img\",\n    includeFailed = false\n  ): Promise<HTMLImageElement[] | ImageLoadResultInterface[]> {\n    const images = this.getImages(selector);\n\n    const results = await Promise.all(\n      images.map(img => {\n        if (this.cache.has(img)) return { element: img, loaded: true };\n\n        if (img.complete && img.naturalWidth > 0) {\n          this.cache.set(img, true);\n          return { element: img, loaded: true };\n        }\n\n        return new Promise<ImageLoadResultInterface>(resolve => {\n          img.addEventListener(\n            \"load\",\n            () => {\n              this.cache.set(img, true);\n              resolve({ element: img, loaded: true });\n            },\n            { once: true }\n          );\n          img.addEventListener(\n            \"error\",\n            () => resolve({ element: img, loaded: false }),\n            { once: true }\n          );\n        });\n      })\n    );\n\n    return includeFailed\n      ? results\n      : results.filter(r => r.loaded).map(r => r.element);\n  }\n\n  public getImageData(selector = \"img\"): ImageMetadataInterface[] {\n    return this.getImages(selector).map(img => {\n      const sources: SourceDataInterface[] = [];\n\n      if (this.includePicture) {\n        const picture = img.closest(\"picture\");\n        if (picture) {\n          picture.querySelectorAll(\"source\").forEach(source => {\n            sources.push({\n              srcset: source.srcset || \"\",\n              type: source.type || \"\",\n              media: source.media || \"\"\n            });\n          });\n        }\n      }\n\n      return {\n        element: img,\n        src: img.src || \"\",\n        alt: img.alt || \"\",\n        href: img.closest(\"a\")?.href ?? null,\n        sources\n      };\n    });\n  }\n\n  public destroy(): void {\n    this.container = null;\n    this.destroyed = true;\n  }\n}\n", "// src/spaceface/system/features/bin/AnimationLoop.ts\n\nexport const VERSION = 'nextworld-1.2.1' as const;\n\ntype FrameCallback = () => void;\n\nexport class AnimationLoop {\n    private callbacks: Set<FrameCallback> = new Set();\n    private running = false;\n    private _rafId: number | null = null;\n\n    add(callback: FrameCallback) {\n        if (!this.callbacks.has(callback)) this.callbacks.add(callback);\n        this.start();\n    }\n\n    remove(callback: FrameCallback) {\n        this.callbacks.delete(callback);\n        if (this.callbacks.size === 0) this.stop();\n    }\n\n    has(callback: FrameCallback): boolean {\n        return this.callbacks.has(callback);\n    }\n\n    private start() {\n        if (this.running || this.callbacks.size === 0) return;\n        this.running = true;\n        this._loop();\n    }\n\n    private stop() {\n        this.running = false;\n        if (this._rafId !== null) cancelAnimationFrame(this._rafId);\n        this._rafId = null;\n    }\n\n    pause() { this.stop(); }\n    resume() { if (this.callbacks.size > 0) this.start(); }\n\n    private _loop = () => {\n        if (!this.running) return;\n        for (const cb of this.callbacks) {\n            try { cb(); } catch (err) { console.error('AnimationLoop callback error:', err); }\n        }\n        this._rafId = requestAnimationFrame(this._loop);\n    };\n}\n\nexport const animationLoop = new AnimationLoop();\n", "// src/spaceface/features/SlidePlayer/SlidePlayer.ts\n//\nexport const VERSION = 'nextworld-1.2.0';\n\nimport { eventBus } from '../../bin/EventBus.js';\nimport { EventBinder } from '../../bin/EventBinder.js';\nimport { AsyncImageLoader } from '../bin/AsyncImageLoader.js';\nimport { animationLoop } from '../bin/AnimationLoop.js';\n\ninterface ISlidePlayerOptions {\n  interval?: number;\n  includePicture?: boolean;\n  dotsSelector?: string;\n  autoCreateDots?: boolean;\n  startPaused?: boolean;\n  enableBusEvents?: boolean;\n  autoplay?: boolean;\n}\n\ntype PauseReason = 'manual' | 'hover' | 'hidden' | 'inactivity';\n\nexport class SlidePlayer {\n  static readonly SWIPE_THRESHOLD = 50;\n  static readonly VERTICAL_TOLERANCE = 30;\n  static readonly DEFAULT_INTERVAL = 5000;\n\n  private container: HTMLElement;\n  private interval: number;\n  private includePicture: boolean;\n  private dotsSelector: string;\n  private autoCreateDots: boolean;\n  private enableBusEvents: boolean;\n  private autoplay: boolean;\n\n  private slides: HTMLElement[] = [];\n  private dots: HTMLDivElement[] = [];\n  private dotsWrapper: HTMLElement | null = null;\n  private currentIndex = 0;\n\n  private lastTickTime = 0;\n  private isDestroyed = false;\n\n  private isPointerDown = false;\n  private pointerStartX = 0;\n  private pointerStartY = 0;\n  private pointerEndX = 0;\n  private pointerEndY = 0;\n\n  private pauseReasons = new Set<PauseReason>();\n  private loader: AsyncImageLoader;\n  private binder: EventBinder;\n  private animateCallback: () => void;\n\n  private lastPauseState: boolean = false;\n  public readonly ready: Promise<void>;\n\n  constructor(\n    containerOrSelector: string | HTMLElement,\n    {\n      interval = SlidePlayer.DEFAULT_INTERVAL,\n      includePicture = false,\n      dotsSelector = '.dots',\n      autoCreateDots = false,\n      startPaused = false,\n      enableBusEvents = true,\n      autoplay = true\n    }: ISlidePlayerOptions = {}\n  ) {\n    this.container = this.resolveContainer(containerOrSelector);\n    this.interval = interval > 0 ? interval : SlidePlayer.DEFAULT_INTERVAL;\n    this.includePicture = includePicture;\n    this.dotsSelector = dotsSelector;\n    this.autoCreateDots = autoCreateDots;\n    this.enableBusEvents = enableBusEvents;\n    this.autoplay = autoplay;\n\n    this.loader = new AsyncImageLoader(this.container, { includePicture });\n    this.binder = new EventBinder(true);\n\n    if (startPaused) this.pauseReasons.add('manual');\n\n    this.animateCallback = () => this.animate();\n\n    this.ready = this.init();\n  }\n\n  private resolveContainer(containerOrSelector: string | HTMLElement): HTMLElement {\n    const container = typeof containerOrSelector === 'string'\n      ? document.querySelector<HTMLElement>(containerOrSelector)\n      : containerOrSelector;\n    if (!container) throw new Error('SlidePlayer: container element not found.');\n    return container;\n  }\n\n  private async init(): Promise<void> {\n    await this.loader.waitForImagesToLoad();\n\n    this.refreshSlides();\n    if (!this.slides.length) {\n      console.warn('[SlidePlayer] No .slide elements found in container.');\n      return;\n    }\n\n    this.setupDots();\n    this.bindEvents();\n    this.setActiveSlide(0);\n    this.lastTickTime = performance.now();\n\n    // Screensaver / inactivity integration\n    if (this.enableBusEvents) {\n      this.binder.bindBus('user:inactive', () => this.togglePause('inactivity', true));\n      this.binder.bindBus('user:active', () => this.togglePause('inactivity', false));\n    }\n\n    // Start RAF loop only if not paused\n    if (!this.isPaused()) animationLoop.add(this.animateCallback);\n  }\n\n  /** ---- RAF Animation ---- */\n  private animate(): void {\n    if (this.isDestroyed || !this.autoplay || this.isPaused() || this.slides.length < 2) return;\n\n    const now = performance.now();\n    const elapsed = now - this.lastTickTime;\n\n    if (elapsed >= this.interval) {\n      this.next(false);\n      this.lastTickTime = now;\n    }\n  }\n\n  /** ---- Pause / Resume ---- */\nprivate togglePause(reason: PauseReason, shouldPause: boolean): void {\n    if (shouldPause) this.pauseReasons.add(reason);\n    else this.pauseReasons.delete(reason);\n\n    this.emitPauseResumeIfChanged();\n\n    // Only update RAF if state really changed\n    if (this.isPaused()) {\n        if (animationLoop.has(this.animateCallback)) animationLoop.remove(this.animateCallback);\n    } else {\n        if (!animationLoop.has(this.animateCallback)) animationLoop.add(this.animateCallback);\n    }\n}\n\n\n  private emitPauseResumeIfChanged(): void {\n    const nowPaused = this.isPaused();\n    if (nowPaused !== this.lastPauseState) {\n      this.lastPauseState = nowPaused;\n      this.emit(nowPaused ? 'slideplayer:paused' : 'slideplayer:resumed', {\n        reasons: Array.from(this.pauseReasons)\n      });\n    }\n  }\n\n  /** ---- Slide Navigation ---- */\n  public goToSlide(index: number, restart: boolean = true): void {\n    if (index < 0 || index >= this.slides.length || index === this.currentIndex) return;\n    this.setActiveSlide(index);\n    if (restart) this.resetTimer();\n  }\n\n  public next(restart: boolean = true): void {\n    if (this.slides.length < 2) return;\n    this.goToSlide((this.currentIndex + 1) % this.slides.length, restart);\n  }\n\n  public prev(restart: boolean = true): void {\n    if (this.slides.length < 2) return;\n    const prevIndex = (this.currentIndex - 1 + this.slides.length) % this.slides.length;\n    this.goToSlide(prevIndex, restart);\n  }\n\n  public play(): void { this.togglePause('manual', false); }\n  public pause(): void { this.togglePause('manual', true); }\n  public isPaused(): boolean { return this.pauseReasons.size > 0; }\n\n  /** ---- Slides / Dots ---- */\n  private refreshSlides(): void { this.slides = Array.from(this.container.querySelectorAll<HTMLElement>('.slide')); }\n\n  private setupDots(): void {\n    this.dotsWrapper = this.container.querySelector(this.dotsSelector);\n    if (!this.dotsWrapper && this.autoCreateDots) {\n      this.dotsWrapper = document.createElement('div');\n      this.dotsWrapper.className = 'dots';\n      this.container.appendChild(this.dotsWrapper);\n    }\n    if (!this.dotsWrapper) return;\n\n    this.dotsWrapper.innerHTML = '';\n    this.dots = this.slides.map((_, i) => {\n      const dot = document.createElement('div');\n      dot.className = 'dot';\n      dot.dataset.index = i.toString();\n      this.binder.bindDOM(dot, 'click', () => this.goToSlide(i));\n      this.dotsWrapper!.appendChild(dot);\n      return dot as HTMLDivElement;\n    });\n  }\n\n  private updateDots(index: number): void { this.dots.forEach((dot, i) => dot.classList.toggle('active', i === index)); }\n\n  private setActiveSlide(index: number): void {\n    const prev = this.currentIndex;\n    this.slides[this.currentIndex]?.classList.remove('active');\n    this.currentIndex = index;\n    this.slides[this.currentIndex]?.classList.add('active');\n    this.updateDots(index);\n    if (prev !== index) this.emit('slideplayer:slideChanged', { index }, 'slideplayer:slide-changed');\n  }\n\n  private resetTimer(): void { this.lastTickTime = performance.now(); }\n\n  /** ---- Event Binding ---- */\n  private bindEvents(): void {\n    this.bindPointerEvents();\n    this.bindKeyboardEvents();\n    this.bindVisibilityEvents();\n    this.bindActivityEvents();\n    this.bindUnloadEvent();\n  }\n\n  private bindPointerEvents(): void {\n    this.binder.bindDOM(this.container, 'pointerdown', (e) => {\n      const ev = e as PointerEvent;\n      this.isPointerDown = true;\n      this.pointerStartX = ev.clientX; this.pointerStartY = ev.clientY;\n      this.pointerEndX = ev.clientX; this.pointerEndY = ev.clientY;\n    });\n    this.binder.bindDOM(this.container, 'pointermove', (e) => {\n      if (!this.isPointerDown) return;\n      const ev = e as PointerEvent;\n      this.pointerEndX = ev.clientX; this.pointerEndY = ev.clientY;\n    });\n    this.binder.bindDOM(this.container, 'pointerup', () => {\n      if (this.isPointerDown) { this.handleSwipe(); this.isPointerDown = false; }\n    });\n    this.binder.bindDOM(this.container, 'pointerleave', () => this.isPointerDown = false);\n    this.binder.bindDOM(this.container, 'mouseenter', () => this.togglePause('hover', true));\n    this.binder.bindDOM(this.container, 'mouseleave', () => this.togglePause('hover', false));\n  }\n\n  private bindKeyboardEvents(): void {\n    this.binder.bindDOM(document, 'keydown', (e) => {\n      const ev = e as KeyboardEvent;\n      if (ev.key === 'ArrowRight') this.next();\n      else if (ev.key === 'ArrowLeft') this.prev();\n    });\n  }\n\n  private bindVisibilityEvents(): void {\n    this.binder.bindDOM(document, 'visibilitychange', () => {\n      this.togglePause('hidden', document.visibilityState === 'hidden');\n    });\n  }\n\n  private bindActivityEvents(): void {\n    this.binder.bindBus('user:inactive', () => this.togglePause('inactivity', true));\n    this.binder.bindBus('user:active', () => this.togglePause('inactivity', false));\n  }\n\n  private bindUnloadEvent(): void {\n    this.binder.bindDOM(window, 'beforeunload', () => this.destroy());\n  }\n\n  private handleSwipe(): void {\n    const dx = this.pointerEndX - this.pointerStartX;\n    const dy = this.pointerEndY - this.pointerStartY;\n    if (Math.abs(dx) >= SlidePlayer.SWIPE_THRESHOLD && Math.abs(dy) < SlidePlayer.VERTICAL_TOLERANCE) {\n      dx < 0 ? this.next() : this.prev();\n    }\n  }\n\n  private emit(type: string, detail: any, busEvent?: string): void {\n    this.container.dispatchEvent(new CustomEvent(type, { detail, bubbles: true }));\n    if (this.enableBusEvents && busEvent) eventBus.emit(busEvent, detail);\n  }\n\n  public destroy(): void {\n    if (this.isDestroyed) return;\n    this.isDestroyed = true;\n    animationLoop.remove(this.animateCallback);\n    this.binder.unbindAll();\n    this.loader.destroy();\n    this.slides = [];\n    this.dots = [];\n    this.dotsWrapper = null;\n    this.pauseReasons.clear();\n  }\n\n  /** ---- Public getters ---- */\n  public get currentSlideIndex(): number { return this.currentIndex; }\n  public get slideCount(): number { return this.slides.length; }\n}\n", "// src/spaceface/system/features/bin/math.ts\n\nexport const VERSION = 'nextworld-1.0.0' as const;\n\nexport const clamp = (value: number, min: number, max: number): number =>\n  Math.max(min, Math.min(value, max));\n\nexport const lerp = (a: number, b: number, t: number): number =>\n  (1 - t) * a + t * b;\n", "// src/spaceface/features/FloatingImages/FloatingImage.ts\n\nexport const VERSION = 'nextworld-1.2.1' as const;\n\nimport { clamp } from '../bin/math.js';\n\nimport type {\n    ContainerDimensionsInterface,\n    FloatingImageOptionsInterface\n} from '../../types/features.js';\n\nconst DAMPING = 0.85;\nconst MIN_VELOCITY = 0.1;\nconst MAX_SPEED = 2.5;\nconst VELOCITY_JITTER = 0.02;\n\nexport class FloatingImage {\n    private element: HTMLElement | null;\n    private size: { width: number; height: number };\n    private x: number;\n    private y: number;\n    private vx: number;\n    private vy: number;\n    private options: Required<FloatingImageOptionsInterface>;\n\n    constructor(element: HTMLElement, dims: ContainerDimensionsInterface, options: FloatingImageOptionsInterface = {}) {\n        this.element = element;\n        this.options = { useSubpixel: true, debug: false, ...options };\n        this.size = { width: element.offsetWidth, height: element.offsetHeight };\n\n        this.x = Math.random() * (dims.width - this.size.width);\n        this.y = Math.random() * (dims.height - this.size.height);\n\n        this.vx = (Math.random() - 0.5) * 3;\n        this.vy = (Math.random() - 0.5) * 3;\n\n        element.style.willChange = 'transform';\n        element.style.backfaceVisibility = 'hidden';\n        element.style.perspective = '1000px';\n        element.style.opacity = '1';\n\n        this.updatePosition();\n    }\n\n    updatePosition(): boolean {\n        if (!this.element) return false;\n        const x = this.options.useSubpixel ? this.x : Math.round(this.x);\n        const y = this.options.useSubpixel ? this.y : Math.round(this.y);\n        this.element.style.transform = `translate3d(${x}px, ${y}px, 0)`;\n        return true;\n    }\n\n    update(multiplier: number, dims: ContainerDimensionsInterface, applyPosition = true): boolean {\n        if (!this.element) return false;\n\n        this.x += this.vx * multiplier;\n        this.y += this.vy * multiplier;\n\n        if (this.x <= 0 || this.x + this.size.width >= dims.width) {\n            this.vx = -this.vx * DAMPING;\n            this.vx = Math.abs(this.vx) < MIN_VELOCITY ? Math.sign(this.vx) * MIN_VELOCITY : this.vx;\n            this.x = clamp(this.x, 0, dims.width - this.size.width);\n        }\n\n        if (this.y <= 0 || this.y + this.size.height >= dims.height) {\n            this.vy = -this.vy * DAMPING;\n            this.vy = Math.abs(this.vy) < MIN_VELOCITY ? Math.sign(this.vy) * MIN_VELOCITY : this.vy;\n            this.y = clamp(this.y, 0, dims.height - this.size.height);\n        }\n\n        this.vx += (Math.random() - 0.5) * VELOCITY_JITTER;\n        this.vy += (Math.random() - 0.5) * VELOCITY_JITTER;\n\n        const speedSquared = this.vx ** 2 + this.vy ** 2;\n        if (speedSquared > MAX_SPEED ** 2) {\n            const scale = MAX_SPEED / Math.sqrt(speedSquared);\n            this.vx *= scale;\n            this.vy *= scale;\n        }\n\n        if (applyPosition) return this.updatePosition();\n        return true;\n    }\n\n    resetPosition(dims: ContainerDimensionsInterface) {\n        this.x = Math.random() * (dims.width - this.size.width);\n        this.y = Math.random() * (dims.height - this.size.height);\n        this.updatePosition(); // must be called\n    }\n\n\n    updateSize() {\n        if (!this.element) return;\n        this.size.width = this.element.offsetWidth;\n        this.size.height = this.element.offsetHeight;\n    }\n\n    clampPosition(dims: ContainerDimensionsInterface) {\n        this.x = clamp(this.x, 0, dims.width - this.size.width);\n        this.y = clamp(this.y, 0, dims.height - this.size.height);\n    }\n\n    destroy() {\n        if (!this.element) return;\n        this.element.style.willChange = 'auto';\n        this.element.style.backfaceVisibility = '';\n        this.element.style.perspective = '';\n        this.element = null;\n    }\n}\n", "// src/spaceface/system/features/bin/PerformanceMonitor.ts\n\nexport const VERSION = 'nextworld-1.0.0' as const;\n\nimport {\n  PerformanceLevel,\n  PerformanceSettingsInterface,\n} from '../../types/bin.js';\n\nexport class PerformanceMonitor {\n  private fps: number = 60;\n  private lastTime: number = performance.now();\n  private frameSkipThreshold: number = 30;\n  private shouldSkipFrame: boolean = false;\n  private frameCount: number = 0;\n\n  private cachedPerformanceLevel: PerformanceLevel = 'high';\n  private lastLevelUpdate: number = 0;\n  private levelUpdateInterval: number = 1000;\n  private cachedSettings: PerformanceSettingsInterface | null = null;\n\n  private lastLoggedFPS: number = 60;\n  private fpsLogThreshold: number = 5;\n\n  /** Updates FPS and returns whether to skip this frame */\n  public update(): boolean {\n    const now = performance.now();\n    const delta = now - this.lastTime;\n    if (delta < 1) return this.shouldSkipFrame;\n\n    const currentFPS = 1000 / delta;\n    this.fps = this.fps * 0.9 + currentFPS * 0.1; // smoothing\n    this.frameCount++;\n\n    this.shouldSkipFrame = this.fps < this.frameSkipThreshold;\n\n    if (Math.abs(this.fps - this.lastLoggedFPS) >= this.fpsLogThreshold) {\n      // eventBus.emit('performance:fps', { fps: this.getCurrentFPS(), frameSkip: this.shouldSkipFrame });\n      this.lastLoggedFPS = this.fps;\n    }\n\n    this.lastTime = now;\n    return this.shouldSkipFrame;\n  }\n\n  public getFrameCount(): number { return this.frameCount; }\n  public getCurrentFPS(): number { return Math.round(this.fps * 10) / 10; }\n\n  public getPerformanceLevel(): PerformanceLevel {\n    const now = performance.now();\n    if (now - this.lastLevelUpdate > this.levelUpdateInterval) {\n      this.cachedPerformanceLevel = this.fps >= 50 ? 'high' : this.fps >= 30 ? 'medium' : 'low';\n      this.lastLevelUpdate = now;\n      this.cachedSettings = null;\n      // eventBus.emit('performance:level', { level: this.cachedPerformanceLevel, fps: this.getCurrentFPS() });\n    }\n    return this.cachedPerformanceLevel;\n  }\n\n  public getRecommendedSettings(): PerformanceSettingsInterface {\n    if (this.cachedSettings) return this.cachedSettings;\n\n    const level = this.getPerformanceLevel();\n    const settingsMap: Record<PerformanceLevel, PerformanceSettingsInterface> = {\n      high: { maxImages: 50, speedMultiplier: 1.0, useSubpixel: true },\n      medium: { maxImages: 25, speedMultiplier: 0.8, useSubpixel: false },\n      low: { maxImages: 10, speedMultiplier: 0.5, useSubpixel: false },\n    };\n    this.cachedSettings = settingsMap[level];\n    return this.cachedSettings;\n  }\n\n  public reset(): void {\n    this.fps = 60;\n    this.lastTime = performance.now();\n    this.shouldSkipFrame = false;\n    this.frameCount = 0;\n    this.cachedPerformanceLevel = 'high';\n    this.lastLevelUpdate = 0;\n    this.cachedSettings = null;\n    this.lastLoggedFPS = 60;\n  }\n}\n", "// src/spaceface/system/features/bin/ResizeManager.ts\n\nimport { debounce, throttle, CancellableFunction } from './timing.js';\n\nexport const VERSION = 'nextworld-1.2.0' as const;\n\ntype ResizeCallback = () => void;\n\ninterface ElementObserverEntryInterface {\n  observer: ResizeObserver;\n  callbacks: Set<ResizeCallback>;\n}\n\ntype ElementSize = { width: number; height: number };\n\nexport class ResizeManager {\n  private windowCallbacks: Map<ResizeCallback, EventListener> = new Map();\n  private elementObservers: Map<Element, ElementObserverEntryInterface> = new Map();\n\n  /**\n   * Register a callback for window resize events.\n   * Optionally debounce or throttle the callback.\n   */\n  onWindow(\n    cb: ResizeCallback,\n    options?: { debounceMs?: number; throttleMs?: number }\n  ): () => void {\n    let wrappedCb: CancellableFunction<() => void>;\n\n    if (options?.debounceMs != null) {\n      wrappedCb = debounce(cb, options.debounceMs);\n    } else if (options?.throttleMs != null) {\n      wrappedCb = throttle(cb, options.throttleMs);\n    } else {\n      wrappedCb = cb as CancellableFunction<() => void>;\n      wrappedCb.cancel = () => {};\n    }\n\n    const handler = () => wrappedCb();\n    this.windowCallbacks.set(cb, handler);\n    window.addEventListener(\"resize\", handler);\n\n    return (): void => {\n      window.removeEventListener(\"resize\", handler);\n      wrappedCb.cancel?.();\n      this.windowCallbacks.delete(cb);\n    };\n  }\n\n  /**\n   * Register a callback for an element's resize events.\n   * Optionally debounce or throttle the callback.\n   */\n  onElement(\n    el: Element,\n    cb: ResizeCallback,\n    options?: { debounceMs?: number; throttleMs?: number }\n  ): () => void {\n    let entry = this.elementObservers.get(el);\n\n    if (!entry) {\n      const callbacks = new Set<ResizeCallback>();\n      const observer = new ResizeObserver(() => {\n        callbacks.forEach(fn => fn());\n      });\n\n      entry = { observer, callbacks };\n      this.elementObservers.set(el, entry);\n      observer.observe(el);\n    }\n\n    // Wrap the callback if debounce or throttle is specified\n    let wrappedCb: CancellableFunction<() => void>;\n\n    if (options?.debounceMs != null) {\n      wrappedCb = debounce(cb, options.debounceMs);\n    } else if (options?.throttleMs != null) {\n      wrappedCb = throttle(cb, options.throttleMs);\n    } else {\n      wrappedCb = cb as CancellableFunction<() => void>;\n      wrappedCb.cancel = () => {};\n    }\n\n    entry.callbacks.add(wrappedCb);\n\n    const callbacksRef = entry.callbacks;\n    const observerRef = entry.observer;\n\n    return (): void => {\n      callbacksRef.delete(wrappedCb);\n      wrappedCb.cancel?.();\n      if (callbacksRef.size === 0) {\n        observerRef.disconnect();\n        this.elementObservers.delete(el);\n      }\n    };\n  }\n\n  /**\n   * Get current size of an element.\n   */\n  getElement(el: HTMLElement): ElementSize {\n    const rect = el.getBoundingClientRect();\n    return { width: rect.width, height: rect.height };\n  }\n\n  /**\n   * Cleanup all registered window and element callbacks.\n   */\n  destroy(): void {\n    for (const [cb, handler] of this.windowCallbacks.entries()) {\n      window.removeEventListener(\"resize\", handler);\n    }\n    this.windowCallbacks.clear();\n\n    for (const entry of this.elementObservers.values()) {\n      entry.observer.disconnect();\n    }\n    this.elementObservers.clear();\n  }\n}\n\n// Singleton instance\nexport const resizeManager = new ResizeManager();\n", "// src/spaceface/features/FloatingImages/FloatingImagesManager.ts\n\nexport const VERSION = 'nextworld-1.2.1' as const;\n\nimport { FloatingImage } from './FloatingImage.js';\nimport { PerformanceMonitor } from '../bin/PerformanceMonitor.js';\nimport { resizeManager } from '../bin/ResizeManager.js';\nimport { AsyncImageLoader } from '../bin/AsyncImageLoader.js';\nimport { animationLoop } from '../bin/AnimationLoop.js';\n\nimport type {\n    FloatingImagesManagerOptionsInterface,\n    ContainerDimensionsInterface,\n    FloatingImagesManagerInterface\n} from '../../types/features.js';\nexport class FloatingImagesManager implements FloatingImagesManagerInterface {\n    readonly container: HTMLElement;\n    performanceMonitor: PerformanceMonitor;\n    images: FloatingImage[] = [];\n    speedMultiplier: number = 1;\n    isInViewport: boolean = true;\n    private _destroyed: boolean = false;\n    private animateCallback: () => void;\n    maxImages: number;\n    intersectionObserver: IntersectionObserver;\n    unsubscribeWindow?: () => void;\n    unsubscribeElement?: () => void;\n    imageLoader: AsyncImageLoader;\n    containerWidth!: number;\n    containerHeight!: number;\n    debug: boolean;\n\n    constructor(container: HTMLElement, options: FloatingImagesManagerOptionsInterface = {}) {\n        this.container = container;\n        this.debug = options.debug ?? false;\n\n        this.performanceMonitor = new PerformanceMonitor();\n        const perfSettings = this.performanceMonitor.getRecommendedSettings();\n        this.maxImages = options.maxImages ?? perfSettings.maxImages;\n\n        this.intersectionObserver = new IntersectionObserver(entries => {\n            this.isInViewport = entries[0].isIntersecting;\n        }, { threshold: 0 });\n        this.intersectionObserver.observe(this.container);\n\n        this.setupResizeHandling();\n        this.imageLoader = new AsyncImageLoader(this.container);\n        this.updateContainerDimensions();\n\n        this.animateCallback = () => this.animate();\n\n        // Only add callback if not already in AnimationLoop\n        if (!animationLoop.has(this.animateCallback)) {\n            animationLoop.add(this.animateCallback);\n        }\n\n        this.initializeImages();\n    }\n\n    private setupResizeHandling() {\n        this.unsubscribeWindow = resizeManager.onWindow(() => this.handleResize());\n        this.unsubscribeElement = resizeManager.onElement(this.container, () => this.handleResize());\n    }\n\n    private updateContainerDimensions() {\n        const dims = resizeManager.getElement(this.container);\n        this.containerWidth = dims.width;\n        this.containerHeight = dims.height;\n    }\n\n    private async initializeImages() {\n        try {\n            const imgElements = await this.imageLoader.waitForImagesToLoad('.floating-image');\n            const dims = { width: this.containerWidth, height: this.containerHeight };\n            imgElements.slice(0, this.maxImages).forEach(el => this.addExistingImage(el, dims));\n        } catch { /* ignore */ }\n    }\n\n    private addExistingImage(el: HTMLElement, dims: ContainerDimensionsInterface) {\n        if (this.images.length >= this.maxImages) return;\n        const floatingImage = new FloatingImage(el, dims, { debug: this.debug });\n        this.images.push(floatingImage);\n    }\n\n    private handleResize() {\n        if (this._destroyed) return;\n        this.updateContainerDimensions();\n        const dims = { width: this.containerWidth, height: this.containerHeight };\n        this.images.forEach(img => {\n            img.updateSize();\n            img.clampPosition(dims);\n            img.updatePosition();\n        });\n    }\n\n    private animate() {\n        if (this._destroyed) return;\n\n        const skipFrame = this.performanceMonitor.update();\n        if (skipFrame || !this.isInViewport || this.speedMultiplier === 0) return;\n\n        const multiplier = this.speedMultiplier;\n        const dims = { width: this.containerWidth, height: this.containerHeight };\n\n        // Update images and filter out any that return false (destroyed/expired)\n        this.images = this.images.filter(img => img.update(multiplier, dims));\n    }\n\n    public resetAllImagePositions() {\n        const dims = { width: this.containerWidth, height: this.containerHeight };\n        this.images.forEach(img => img.resetPosition(dims));\n    }\n\n    public reinitializeImages() {\n        if (this._destroyed) return;\n\n        // Destroy old images\n        this.images.forEach(img => img.destroy());\n        this.images.length = 0;\n\n        const dims = { width: this.containerWidth, height: this.containerHeight };\n\n        // Re-use existing DOM elements\n        const imgElements = Array.from(this.container.querySelectorAll<HTMLElement>('.floating-image'))\n            .slice(0, this.maxImages);\n\n        imgElements.forEach(el => {\n            const floatingImage = new FloatingImage(el, dims, { debug: this.debug });\n            this.images.push(floatingImage);\n        });\n    }\n\n    destroy() {\n        if (this._destroyed) return;\n\n        this._destroyed = true;\n\n        // Remove callback safely\n        if (animationLoop.has(this.animateCallback)) {\n            animationLoop.remove(this.animateCallback);\n        }\n\n        this.unsubscribeWindow?.();\n        this.unsubscribeElement?.();\n        this.intersectionObserver.disconnect();\n        this.images.forEach(img => img.destroy());\n        this.images.length = 0;\n        this.imageLoader.destroy();\n    }\n}\n", "// src/spaceface/features/Screensaver/ScreensaverController.ts\n\nexport const VERSION = 'nextworld-1.0.0' as const;\n\nimport { eventBus } from \"../../bin/EventBus.js\";\nimport { EventBinder } from \"../../bin/EventBinder.js\";\nimport { InactivityWatcher } from \"../../bin/InactivityWatcher.js\";\nimport { PartialFetcher } from \"../../bin/PartialFetcher.js\";\nimport { FloatingImagesManager } from \"../FloatingImages/FloatingImagesManager.js\";\n\nimport type {\n  ScreensaverControllerOptionsInterface,\n  FloatingImagesManagerInterface\n} from \"../../types/features.js\";\n\nexport class ScreensaverController {\n  private readonly partialUrl: string;\n  private readonly targetSelector: string;\n  private readonly inactivityDelay: number;\n  private screensaverManager: FloatingImagesManagerInterface | null = null;\n  private watcher: InactivityWatcher | null = null;\n  private _destroyed = false;\n  private eventBinder: EventBinder;\n  private _partialLoaded = false;\n  private partialFetcher: typeof PartialFetcher;\n\n  private _onInactivity: () => void;\n  private _onActivity: () => void;\n\n  constructor(\n    options: ScreensaverControllerOptionsInterface & {\n      watcher?: InactivityWatcher;\n      partialFetcher?: typeof PartialFetcher;\n    }\n  ) {\n    this.partialUrl = options.partialUrl;\n    this.targetSelector = options.targetSelector;\n    this.inactivityDelay = options.inactivityDelay ?? 12000;\n\n    this.watcher = options.watcher ?? null;\n    this.partialFetcher = options.partialFetcher ?? PartialFetcher;\n\n    this.eventBinder = new EventBinder(true);\n    this._onInactivity = this.showScreensaver.bind(this);\n    this._onActivity = this.hideScreensaver.bind(this);\n\n    eventBus.emit(\"screensaver:log\", {\n      level: \"info\",\n      message: \"ScreensaverController initialized\",\n      details: {\n        partialUrl: this.partialUrl,\n        targetSelector: this.targetSelector,\n        inactivityDelay: this.inactivityDelay\n      }\n    });\n  }\n\n  async init(): Promise<void> {\n    if (this._destroyed) return;\n\n    try {\n      if (!this.watcher) {\n        this.watcher = InactivityWatcher.getInstance({\n          inactivityDelay: this.inactivityDelay\n        });\n      }\n\n      this.eventBinder.bindBus(\"user:inactive\", this._onInactivity);\n      this.eventBinder.bindBus(\"user:active\", this._onActivity);\n\n      eventBus.emit(\"screensaver:log\", {\n        level: \"info\",\n        message: \"Bound user inactivity/active events\"\n      });\n    } catch (error) {\n      eventBus.emit(\"screensaver:error\", {\n        message: \"Failed to initialize inactivity watcher\",\n        error\n      });\n    }\n  }\n\n  async showScreensaver(): Promise<void> {\n    if (this._destroyed) return;\n\n    try {\n      if (!this._partialLoaded) {\n        await this.partialFetcher.load(this.partialUrl, this.targetSelector);\n        this._partialLoaded = true;\n      }\n\n      const container = document.querySelector<HTMLElement>(this.targetSelector);\n      if (!container) {\n        eventBus.emit(\"screensaver:error\", {\n          message: `Target selector \"${this.targetSelector}\" not found`\n        });\n        return;\n      }\n\n      container.style.opacity = \"0\";\n      container.style.display = \"\";\n      void container.offsetWidth; // force reflow\n      container.style.transition = \"opacity 0.5s ease\";\n      container.style.opacity = \"1\";\n\n      if (!this.screensaverManager) {\n        this.screensaverManager = new FloatingImagesManager(container, { debug: true });\n      } else {\n        this.screensaverManager.destroy();\n        this.screensaverManager = new FloatingImagesManager(container, { debug: true });\n      }\n\n      eventBus.emit(\"screensaver:log\", {\n        level: \"info\",\n        message: \"Screensaver displayed\"\n      });\n    } catch (error) {\n      eventBus.emit(\"screensaver:error\", {\n        message: \"Failed to load or show screensaver\",\n        error\n      });\n    }\n  }\n\n  hideScreensaver(): void {\n    if (this._destroyed) return;\n\n    try {\n      const container = document.querySelector<HTMLElement>(this.targetSelector);\n      if (container) {\n        container.style.transition = \"opacity 0.5s ease\";\n        container.style.opacity = \"0\";\n        setTimeout(() => {\n          container.style.display = \"none\";\n        }, 500);\n      }\n    } catch (error) {\n      eventBus.emit(\"screensaver:error\", {\n        message: \"Failed to hide screensaver\",\n        error\n      });\n    }\n  }\n\n  destroy(): void {\n    if (this._destroyed) return;\n    this._destroyed = true;\n\n    this.hideScreensaver();\n    this.screensaverManager?.destroy();\n    this.eventBinder.unbindAll();\n    this._partialLoaded = false;\n\n    eventBus.emit(\"screensaver:log\", {\n      level: \"info\",\n      message: \"ScreensaverController destroyed\"\n    });\n  }\n}\n", "// src/spaceface/system/bin/DomReadyPromise.ts\n\nexport const VERSION = 'nextworld-1.0.0' as const;\n\nimport { WaitForElementOptions } from '../types/bin.js';\n\n/**\n * Utility class for DOM readiness and waiting for elements to appear.\n * Provides:\n * - A promise for when the DOM is ready (`DOMContentLoaded`).\n * - A helper to wait until specific elements are present in the DOM.\n */\nexport class DomReadyPromise {\n    /** Cached promise that resolves once the DOM is ready */\n    static #readyPromise: Promise<void> | null = null;\n\n    /**\n     * Returns a promise that resolves when the DOM is fully loaded.\n     * Equivalent to listening for `DOMContentLoaded`, but safe to call multiple times.\n     *\n     * @returns Promise that resolves once the DOM is ready.\n     */\n    static ready(): Promise<void> {\n        if (!this.#readyPromise) {\n            this.#readyPromise = document.readyState !== 'loading'\n                ? Promise.resolve()\n                : new Promise<void>(resolve => {\n                    document.addEventListener('DOMContentLoaded', () => resolve(), { once: true });\n                });\n        }\n        return this.#readyPromise;\n    }\n\n    /**\n     * Waits for one or more DOM elements to appear in the document.\n     * Uses a `MutationObserver` to detect added nodes, with optional timeout and abort support.\n     *\n     * @typeParam T - Type of element(s) expected (extends Element).\n     *\n     * @param selectors - CSS selector string or array of selectors to wait for.\n     * @param options - Options to control timeout, root element, and abort signal.\n     * @returns Promise that resolves with the found element (if one selector) or array of elements (if multiple).\n     * @throws DOMException `\"TimeoutError\"` if elements are not found within the timeout.\n     * @throws DOMException `\"AbortError\"` if the operation is aborted via `AbortSignal`.\n     */\n    static waitForElement<T extends Element>(\n        selectors: string | string[],\n        options: WaitForElementOptions = {}\n    ): Promise<T | T[]> {\n        const { timeout = 5000, root = document, signal } = options;\n        const selectorList = Array.isArray(selectors) ? selectors : [selectors];\n        const isMultiple = selectorList.length > 1;\n\n        return new Promise((resolve, reject) => {\n            let timeoutId: number | undefined;\n            const foundElements: Map<string, T> = new Map();\n\n            const cleanup = () => {\n                observer.disconnect();\n                if (timeoutId !== undefined) clearTimeout(timeoutId);\n                if (signal) signal.removeEventListener('abort', onAbort);\n            };\n\n            const resolveFound = () => {\n                const result = selectorList.map(s => foundElements.get(s)!);\n                cleanup();\n                resolve(isMultiple ? result : result[0]);\n            };\n\n            const check = () => {\n                for (const selector of selectorList) {\n                    if (!foundElements.has(selector)) {\n                        const el = root.querySelector<T>(selector);\n                        if (el) foundElements.set(selector, el);\n                    }\n                }\n                if (foundElements.size === selectorList.length) {\n                    resolveFound();\n                    return true;\n                }\n                return false;\n            };\n\n            const onAbort = () => {\n                cleanup();\n                reject(new DOMException('waitForElement aborted', 'AbortError'));\n            };\n\n            if (signal) {\n                if (signal.aborted) return onAbort();\n                signal.addEventListener('abort', onAbort, { once: true });\n            }\n\n            // Initial check before observing\n            if (check()) return;\n\n            // Optimized observer: only reacts to added nodes\n            const observer = new MutationObserver(mutations => {\n                for (const mutation of mutations) {\n                    if (mutation.addedNodes.length > 0) {\n                        if (check()) return;\n                    }\n                }\n            });\n\n            observer.observe(root, { childList: true, subtree: true });\n\n            if (isFinite(timeout) && timeout > 0) {\n                timeoutId = window.setTimeout(() => {\n                    cleanup();\n                    const missing = selectorList.filter(s => !foundElements.has(s));\n                    reject(new DOMException(\n                        `Element(s) \"${missing.join(', ')}\" not found in ${timeout}ms`,\n                        'TimeoutError'\n                    ));\n                }, timeout);\n            }\n        });\n    }\n}\n", "export { DomReadyPromise } from \"../system/bin/DomReadyPromise.js\";\nexport { InactivityWatcher } from \"../system/bin/InactivityWatcher.js\";\nexport { eventBus } from \"../system/bin/EventBus.js\";\nexport { EventBinder } from \"../system/bin/EventBinder.js\";\nexport { EventWatcher } from \"../system/bin/EventWatcher.js\";\nexport { PartialFetcher } from \"../system/bin/PartialFetcher.js\";\nexport { PartialLoader } from \"../system/bin/PartialLoader.js\";\nexport { generateId } from \"../system/bin/generateId.js\";\nexport { ServiceWorkerManager } from \"../system/bin/ServiceWorkerManager.js\";\n\nexport type { FloatingImagesManagerInterface } from '../system/types/features.js';\n", "// src/spaceface/system/bin/generateId.ts\n\nexport const VERSION = 'nextworld-1.0.0' as const;\n\nexport function generateId(prefix: string = 'id', length: number = 9): string {\n  return `${prefix}-${Math.random().toString(36).slice(2, 2 + length)}`;\n}\n", "// src/spaceface/app/bin/main.ts\n\nimport { generateId, eventBus, DomReadyPromise, InactivityWatcher, ServiceWorkerManager, FloatingImagesManagerInterface } from './symlink.js';\n\n// AppConfig\ninterface AppConfigOptions {\n    features?: Record<string, any>;\n    debug?: boolean;\n    [key: string]: any;\n}\n\nexport class AppConfig {\n    public config: Record<string, any>;\n\n    constructor(options: AppConfigOptions = {}) {\n        this.config = {\n            hostname: window.location.hostname,\n            production:\n                window.location.hostname !== 'localhost' &&\n                !window.location.hostname.includes('127.0.0.1'),\n            features: options.features ?? {},\n            ...options,\n        };\n    }\n\n    public get(key: string): any {\n        return key.split('.').reduce((value: any, k: string) => {\n            if (value?.[k] === undefined) {\n                console.log(`[spaceface] Config key \"${key}\" is undefined`);\n                return undefined;\n            }\n            return value[k];\n        }, this.config);\n    }\n}\n\n// Spaceface\ninterface FeatureModuleMap {\n    partialLoader: any;\n    slideplayer: any;\n    screensaver: any;\n    serviceWorker: any;\n}\n\ninterface SpacefaceOptions extends AppConfigOptions {}\n\nexport class Spaceface {\n    static EVENT_LOG = 'log';\n    static EVENT_TELEMETRY = 'telemetry';\n\n    public appConfig: AppConfig;\n    public config: Record<string, any>;\n    public features: Record<string, any>;\n    public debug: boolean;\n    public pageType: string;\n    public startTime: number;\n\n    private featureModules: FeatureModuleMap;\n    private featureCache: Map<keyof FeatureModuleMap, any>;\n    private inactivityWatcher: InactivityWatcher | null;\n    private screensaverController: FloatingImagesManagerInterface | null;\n    private slideshows: any[] = [];\n    private swManager?: ServiceWorkerManager;\n    private _partialUnsub?: () => void;\n    private _partialObserver?: any;\n\n    constructor(options: SpacefaceOptions = {}) {\n        this.appConfig = new AppConfig(options);\n        this.config = this.appConfig.config;\n        this.features = this.config.features ?? {};\n        this.debug = !!this.config.debug;\n\n        this.pageType = this.resolvePageType();\n        this.startTime = performance.now();\n\n        this.featureModules = this.defineFeatureModules();\n        this.featureCache = new Map();\n        this.inactivityWatcher = null;\n        this.screensaverController = null;\n\n        this.validateConfig();\n\n        // Prefetch feature modules\n        (Object.keys(this.featureModules) as (keyof FeatureModuleMap)[]).forEach((name) =>\n            this.loadFeatureModule(name),\n        );\n    }\n\n    private validateConfig(): void {\n        if (!this.config || typeof this.config !== 'object') {\n            throw new Error('Invalid or missing configuration object');\n        }\n        if (!this.config.features) this.log('warn', 'No features specified in config');\n    }\n\n    public log(level: 'debug' | 'info' | 'warn' | 'error', ...args: any[]): void {\n        if (!this.debug && level === 'debug') return;\n        eventBus.emit(Spaceface.EVENT_LOG, { level, args });\n\n        // Dev console logging\n        if (this.debug) {\n            const consoleMethodMap: Record<'debug' | 'info' | 'warn' | 'error', keyof Console> = {\n                debug: 'debug',\n                info: 'info',\n                warn: 'warn',\n                error: 'error',\n            };\n            const method = consoleMethodMap[level] ?? 'log';\n            (console as any)[method](`[spaceface] [${level.toUpperCase()}]`, ...args);\n        }\n    }\n\n    private defineFeatureModules(): FeatureModuleMap {\n        return {\n            partialLoader: () => import('../system/bin/PartialLoader.js'),\n            slideplayer: () => import('../system/features/SlidePlayer/SlidePlayer.js'),\n            screensaver: () => import('../system/features/Screensaver/ScreensaverController.js'),\n            serviceWorker: () => import('../system/bin/ServiceWorkerManager.js'),\n        };\n    }\n\n    private resolvePageType(): string {\n        const path = window.location.pathname;\n        const body = document.body;\n        if (body.dataset.page) return body.dataset.page;\n        if (path === '/') return 'home';\n        if (path === '/app') return 'app';\n        return 'default';\n    }\n\n    private async loadFeatureModule<K extends keyof FeatureModuleMap>(name: K): Promise<any> {\n        if (!this.featureModules[name] || this.featureCache.has(name)) {\n            return this.featureCache.get(name) ?? null;\n        }\n\n        try {\n            const module = await this.featureModules[name]();\n            this.featureCache.set(name, module);\n        } catch (err) {\n            this.log('error', `Failed to load module \"${name}\"`, err);\n            this.featureCache.set(name, null);\n        }\n\n        return this.featureCache.get(name);\n    }\n\n    // ========================================================================\n    // Feature initializers\n    // ========================================================================\n\n    public async initInactivityWatcher(): Promise<void> {\n        try {\n            const { screensaver } = this.features;\n            if (!screensaver || this.inactivityWatcher) return;\n\n            this.inactivityWatcher = InactivityWatcher.getInstance({\n                inactivityDelay: screensaver.delay ?? 3000,\n            });\n        } catch (err) {\n            this.log('error', \"Failed to initialize InactivityWatcher\", err);\n        }\n    }\n\n    public async initSlidePlayer(): Promise<void> {\n        try {\n            const { slideplayer } = this.features;\n            if (!slideplayer) return;\n\n            const module = await this.loadFeatureModule('slideplayer');\n            const SlidePlayer = module?.SlidePlayer;\n            if (!SlidePlayer) return;\n\n            this.slideshows = [];\n            for (const node of document.querySelectorAll('.slideshow-container')) {\n                const slideshow = new SlidePlayer(node, {\n                    interval: slideplayer.interval ?? 5000,\n                    includePicture: slideplayer.includePicture ?? false,\n                });\n                if (slideshow.ready?.then) await slideshow.ready;\n                this.slideshows.push(slideshow);\n            }\n            this.log('info', `${this.slideshows.length} SlidePlayer instance(s) loaded`);\n        } catch (err) {\n            this.log('error', \"Failed to initialize SlidePlayer\", err);\n        }\n    }\n\n    public async initScreensaver(): Promise<void> {\n        try {\n            const { screensaver } = this.features;\n            if (!screensaver?.partialUrl) {\n                this.log('error', \"Screensaver configuration is missing or incomplete\");\n                return;\n            }\n\n            const module = await this.loadFeatureModule('screensaver');\n            const ScreensaverController = module?.ScreensaverController;\n            if (!ScreensaverController) return;\n\n            const id = generateId('screensaver', 9);\n            const container = Object.assign(document.createElement('div'), {\n                id,\n                style:\n                    'position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; z-index: 999; display: none;',\n            });\n            document.body.appendChild(container);\n\n            this.screensaverController = new ScreensaverController({\n                partialUrl: screensaver.partialUrl,\n                targetSelector: `#${id}`,\n                ...(screensaver.delay !== undefined && { inactivityDelay: screensaver.delay }),\n            });\n\n            if (this.screensaverController?.init) {\n                await this.screensaverController.init();\n            }\n\n            eventBus.emit('screensaver:initialized', id);\n            this.log('info', 'Screensaver initialized:', id);\n        } catch (err) {\n            this.log('error', \"Failed to initialize screensaver\", err);\n        }\n    }\n\n    public async initServiceWorker(): Promise<void> {\n        try {\n            if (!this.features.serviceWorker) return;\n\n            const module = await this.loadFeatureModule('serviceWorker');\n            const Manager = module?.default;\n            if (!Manager) return;\n\n            const swManager = new Manager('/sw.js', {}, {\n                strategy: { images: 'cache-first', others: 'network-first' },\n            });\n\n            await swManager.register();\n            swManager.configure();\n            this.swManager = swManager;\n            this.log('info', 'Service Worker registered and configured');\n        } catch (err) {\n            this.log('error', \"Service Worker registration failed\", err);\n        }\n    }\n\n    public async initPartialLoader(): Promise<any> {\n        try {\n            const config = this.features.partialLoader;\n            if (!config?.enabled) return null;\n\n            const module = await this.loadFeatureModule('partialLoader');\n            const PartialLoader = module?.PartialLoader;\n            if (!PartialLoader) return null;\n\n            const loader = new PartialLoader({\n                debug: config.debug ?? this.debug,\n                baseUrl: config.baseUrl ?? '/',\n                cacheEnabled: config.cacheEnabled ?? true,\n            });\n\n            await loader.loadContainer(document);\n            this._partialObserver = loader.watch(document);\n\n            this.log('info', 'PartialLoader initialized');\n            return loader;\n        } catch (err) {\n            this.log('error', \"PartialLoader initialization failed\", err);\n            return null;\n        }\n    }\n\n    public async initPageFeatures(): Promise<void> {\n        try {\n            this.log('info', `Initializing features for page type: ${this.pageType}`);\n            this.log('info', `Page features initialized for: ${this.pageType}`);\n        } catch (err) {\n            this.log('error', `Page feature initialization failed for ${this.pageType}`, err);\n        }\n    }\n\n    // Main init\n    public async init(): Promise<void> {\n        try {\n            this.log('info', `App initialization started (Page: ${this.pageType})`);\n            document.documentElement.classList.add('js-enabled', `page-${this.pageType}`);\n\n            await DomReadyPromise.ready();\n            this.log('info', 'DOM ready');\n\n            const featurePromises = [\n                this.initInactivityWatcher(),\n                this.initPartialLoader(),\n                this.initSlidePlayer(),\n                this.initScreensaver(),\n                this.initServiceWorker(),\n            ];\n\n            await Promise.allSettled(featurePromises);\n            await this.initPageFeatures();\n\n            const duration = (performance.now() - this.startTime).toFixed(2);\n            this.log('info', `App initialized in ${duration}ms`);\n            eventBus.emit(Spaceface.EVENT_TELEMETRY, {\n                type: 'init:duration',\n                value: duration,\n                page: this.pageType,\n            });\n        } catch (err) {\n            this.log('error', \"Critical app initialization error\", err);\n        }\n    }\n\n    public destroy(): void {\n        if (this._partialUnsub) {\n            this._partialUnsub();\n            this._partialUnsub = undefined;\n        }\n    }\n}\n\n// Dev Event Logging\nconst isDev = ['localhost', '127.0.0.1'].some(host =>\n    window.location.hostname.includes(host),\n);\n\nif (isDev) {\n    eventBus.onAny((eventName, payload) => {\n        if (!payload) return console.log(`[spaceface onAny] Event: ${eventName} \u2013 no payload!`);\n        if (typeof payload === 'string') return console.log(`[spaceface onAny] Event: ${eventName} [LOG]`, payload);\n\n        const { level = 'log', message, args, ...otherDetails } = payload;\n        const fullMessage = message ?? args ?? otherDetails ?? '(no details)';\n        const consoleMethodMap: Record<'debug' | 'info' | 'warn' | 'error' | 'log', keyof Console> = {\n            debug: 'debug',\n            info: 'info',\n            warn: 'warn',\n            error: 'error',\n            log: 'log',\n        };\n        const method = consoleMethodMap[level as keyof typeof consoleMethodMap] ?? 'log';\n        (console as any)[method](`[ spaceface onAny ] Event: ${eventName} [${level.toUpperCase()}] \u2013`, fullMessage);\n    });\n}\n\n// Initialize App\nconst app = new Spaceface({\n    features: {\n        partialLoader: { enabled: true, debug: false, baseUrl: '/', cacheEnabled: true },\n        slideplayer: { interval: 5000, includePicture: false, showDots: false },\n        screensaver: { delay: 4500, partialUrl: 'content/feature/screensaver/index.html' },\n        serviceWorker: true,\n    },\n});\n\napp.init();\n"],
  "mappings": "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",
  "names": ["EventWatcher", "init_EventWatcher", "__esmMin", "target", "debug", "args", "type", "handler", "EventBus", "eventBus", "init_EventBus", "__esmMin", "event", "fn", "priority", "list", "listener", "i", "wrapper", "payload", "l", "err", "results", "message", "error", "e", "createTimeout", "id", "fn", "ms", "debounce", "func", "delay", "immediate", "timer", "debounced", "args", "callNow", "throttle", "options", "leading", "trailing", "lastCall", "lastArgs", "lastThis", "invoke", "throttled", "now", "remaining", "init_timing", "__esmMin", "InactivityWatcher", "init_InactivityWatcher", "__esmMin", "init_EventWatcher", "init_EventBus", "init_timing", "_InactivityWatcher", "EventWatcher", "target", "options", "throttledReset", "throttle", "now", "eventBus", "EventBinder", "eventBinder", "init_EventBinder", "__esmMin", "init_EventBus", "_EventBinder", "debug", "method", "details", "payload", "eventBus", "signal", "listener", "event", "handler", "b", "unsubscribe", "err", "target", "options", "controller", "normalizedOptions", "i", "callback", "binder", "result", "PartialFetcher", "init_PartialFetcher", "__esmMin", "init_EventBus", "init_EventBinder", "url", "targetSelector", "options", "replace", "signal", "withBindings", "debugBindings", "runLoad", "basePayload", "eventBus", "response", "html", "container", "template", "error", "EventBinder", "binder", "PartialLoader_exports", "__export", "PartialLoader", "VERSION", "init_PartialLoader", "__esmMin", "init_timing", "init_EventBus", "options", "msg", "data", "input", "items", "results", "item", "url", "eventBus", "link", "src", "info", "container", "id", "promise", "html", "error", "attempt", "controller", "timeoutId", "res", "err", "template", "div", "base", "ms", "r", "links", "observer", "debounce", "ServiceWorkerManager_exports", "__export", "ServiceWorkerManager", "VERSION", "init_ServiceWorkerManager", "__esmMin", "swPath", "options", "customConfig", "error", "newWorker", "message", "transfer", "sw", "timeout", "resolve", "reject", "timer", "handler", "event", "config", "AsyncImageLoader", "init_AsyncImageLoader", "__esmMin", "container", "options", "selector", "images", "el", "includeFailed", "results", "img", "resolve", "r", "sources", "picture", "source", "AnimationLoop", "animationLoop", "init_AnimationLoop", "__esmMin", "callback", "cb", "err", "SlidePlayer_exports", "__export", "SlidePlayer", "VERSION", "init_SlidePlayer", "__esmMin", "init_EventBus", "init_EventBinder", "init_AsyncImageLoader", "init_AnimationLoop", "_SlidePlayer", "containerOrSelector", "interval", "includePicture", "dotsSelector", "autoCreateDots", "startPaused", "enableBusEvents", "autoplay", "AsyncImageLoader", "EventBinder", "container", "animationLoop", "now", "reason", "shouldPause", "nowPaused", "index", "restart", "prevIndex", "_", "i", "dot", "prev", "ev", "dx", "dy", "type", "detail", "busEvent", "eventBus", "clamp", "init_math", "__esmMin", "value", "min", "max", "DAMPING", "MIN_VELOCITY", "MAX_SPEED", "VELOCITY_JITTER", "FloatingImage", "init_FloatingImage", "__esmMin", "init_math", "element", "dims", "options", "x", "y", "multiplier", "applyPosition", "clamp", "speedSquared", "scale", "PerformanceMonitor", "init_PerformanceMonitor", "__esmMin", "now", "delta", "currentFPS", "level", "settingsMap", "ResizeManager", "resizeManager", "init_ResizeManager", "__esmMin", "init_timing", "cb", "options", "wrappedCb", "debounce", "throttle", "handler", "el", "entry", "callbacks", "observer", "fn", "callbacksRef", "observerRef", "rect", "FloatingImagesManager", "init_FloatingImagesManager", "__esmMin", "init_FloatingImage", "init_PerformanceMonitor", "init_ResizeManager", "init_AsyncImageLoader", "init_AnimationLoop", "container", "options", "PerformanceMonitor", "perfSettings", "entries", "AsyncImageLoader", "animationLoop", "resizeManager", "dims", "imgElements", "el", "floatingImage", "FloatingImage", "img", "multiplier", "ScreensaverController_exports", "__export", "ScreensaverController", "VERSION", "init_ScreensaverController", "__esmMin", "init_EventBus", "init_EventBinder", "init_InactivityWatcher", "init_PartialFetcher", "init_FloatingImagesManager", "options", "PartialFetcher", "EventBinder", "eventBus", "InactivityWatcher", "error", "container", "FloatingImagesManager", "DomReadyPromise", "#readyPromise", "resolve", "selectors", "options", "timeout", "root", "signal", "selectorList", "isMultiple", "reject", "timeoutId", "foundElements", "cleanup", "observer", "onAbort", "resolveFound", "result", "s", "check", "selector", "el", "mutations", "mutation", "missing", "init_InactivityWatcher", "init_EventBus", "init_EventBinder", "init_EventWatcher", "init_PartialFetcher", "init_PartialLoader", "generateId", "prefix", "length", "init_ServiceWorkerManager", "AppConfig", "options", "key", "value", "k", "Spaceface", "_Spaceface", "name", "level", "args", "eventBus", "method", "path", "body", "module", "err", "screensaver", "InactivityWatcher", "slideplayer", "SlidePlayer", "node", "slideshow", "ScreensaverController", "id", "generateId", "container", "Manager", "swManager", "config", "PartialLoader", "loader", "DomReadyPromise", "featurePromises", "duration", "isDev", "host", "eventName", "payload", "message", "otherDetails", "fullMessage", "app"]
}
